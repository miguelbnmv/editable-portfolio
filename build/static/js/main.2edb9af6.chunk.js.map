{"version":3,"sources":["components/shared/modal/modal.module.scss","pages/projects/project/project.module.scss","assets/icons/Github.svg","assets/icons/Instagram.svg","assets/icons/Twitter.svg","assets/images/Kelvin.png","context/userContext.js","assets/icons/left.svg","assets/icons/right.svg","assets/icons/close.svg","assets/icons/projects.svg","assets/icons/experience.svg","assets/icons/home.svg","assets/icons/settings.svg","components/shared/elements/button/Button.js","components/shared/header/Header.js","components/shared/navigation/Navigation.js","components/shared/layout/Layout.js","components/shared/modal/Modal.js","components/shared/forms/form-wrapper/FormWrapper.js","components/home/info-element/InfoElement.js","assets/icons/required.svg","assets/icons/requiredError.svg","components/shared/forms/input/Input.js","components/shared/forms/textarea/Textarea.js","components/home/forms/contact-form/ContactForm.js","components/home/forms/contact-form/utils.js","components/shared/forms/form-title/FormTitle.js","components/home/forms/edit-info-form/EditInfoForm.js","components/home/forms/edit-info-form/utils.js","pages/home/Home.js","components/projects/project-card/useMousePosition.js","components/projects/project-card/ProjectCard.js","components/shared/forms/files-input/FilesInput.js","components/projects/forms/add-project-form/AddProjectForm.js","components/projects/forms/add-project-form/utils.js","components/shared/forms/list-element/ListElement.js","components/projects/forms/my-projects-form/MyProjectsForm.js","pages/projects/projects-list/ProjectsList.js","pages/projects/project/Project.js","components/experience/forms/add-experience-form/AddExperienceForm.js","components/experience/forms/add-experience-form/utils.js","components/experience/forms/my-experience-form/MyExperienceForm.js","pages/experience/Experience.js","components/landing-page/forms/register-form/utils.js","components/landing-page/forms/register-form/RegisterForm.js","components/landing-page/forms/login-form/utils.js","components/landing-page/forms/login-form/LoginForm.js","assets/images/MockupLanding.png","pages/landing/Landing.js","App.js","index.js","components/shared/elements/button/button.module.scss","pages/landing/landing.module.scss","components/shared/header/header.module.scss","pages/home/home.module.scss","components/shared/forms/input/input.module.scss","components/shared/forms/textarea/textarea.module.scss","components/shared/forms/list-element/list-element.module.scss","components/shared/navigation/navigation.module.scss","components/home/info-element/info-element.module.scss","components/shared/forms/form-title/form-title.module.scss","components/projects/project-card/project-card.module.scss","components/shared/forms/files-input/files-input.module.scss","pages/projects/projects-list/projects-list.module.scss"],"names":["module","exports","Context","createContext","UserContext","children","Provider","value","Data","classes","green","red","white","borderless","icon","icons","left","leftIcon","right","rightIcon","close","closeIcon","projects","projectsIcon","experience","experienceIcon","home","homeIcon","settings","settingsIcon","Button","color","handle","img","text","type","disabled","className","button","onClick","src","alt","width","navigation","Home","Projects","Experience","Header","pageTitle","noFill","hide","openModal","navigate","useNavigate","getTitle","index","getPath","header","headerTransparent","hideTitle","pageInfo","nav","Layout","Navigation","Modal","title","handleButton","handleClose","footerContent","isSubmitting","useState","isMaxHeight","setIsMaxHeight","useEffect","contentHeight","document","getElementById","offsetHeight","background","id","content","footer","style","boxShadow","link","FormWrapper","initialValues","schema","validationSchema","onSubmit","formik","handleSubmit","isSubmit","InfoElement","label","wrapper","Input","isRequired","name","placeholder","handleChange","error","input","htmlFor","requiredError","required","onChange","errorMessage","Textarea","textarea","ContactForm","values","contactName","errors","touched","contactEmail","contactMessage","contactFormSchema","Yup","shape","email","FormTitle","isList","marginBottom","EditInfoForm","userName","userBio","double","userRole","userLocation","userEmail","userPhone","userBehance","userGitHub","userLinkedIn","userInstagram","userTwitter","userDribble","user","bio","role","location","phone","social","behance","Github","Linkedin","Instagram","Twitter","Dribble","editInfoFormSchema","GithubIcon","InstagramIcon","TwitterIcon","contactOpen","setContactOpen","editInfoOpen","setEditInfoOpen","info","useContext","modal","isContact","contactFormValues","editInfoFormValues","contentContainer","about","split","Object","entries","map","x","href","imageGroup","Kelvin","useMousePosition","y","position","setPosition","setFromEvent","e","clientX","clientY","window","addEventListener","removeEventListener","ProjectCard","project","mode","speed","card","banner","top","FilesInput","AddProjectForm","projectTitle","projectQuote","projectFirstDescriptionTitle","projectFirstDescription","projectSecondDescriptionTitle","projectSecondDescription","projectSubject","projectDate","projectPlatforms","projectTechnologies","quote","primaryDescription","description","secondaryDescription","subject","year","platforms","technologies","projectImages","addProjectFormSchema","ListElement","editHandle","controls","MyProjectsForm","ProjectsList","useSearchParams","searchParams","addProjectOpen","setAddProjectOpen","myProjectsOpen","setMyProjectsOpen","find","parseInt","get","Project","editProject","setEditProject","projectId","useParams","hero","main","primaryBio","image","secondaryBio","breakpointCols","default","masonry","columnClassName","masonryColumn","gallery","AddExperienceForm","experienceTitle","experienceDate","date","experienceImages","images","addExperienceFormSchema","MyExperienceForm","experiences","currentYear","addTitle","Date","getFullYear","Fragment","addExperienceOpen","setAddExperienceOpen","myExperienceOpen","setMyExperienceOpen","registerEmail","registerPassword","registerRepeatPassword","registerFormSchema","matches","oneOf","RegisterForm","loginEmail","loginPassword","loginFormSchema","LoginForm","loginOpen","setLoginOpen","registerOpen","setRegisterOpen","isRegister","registerValues","loginValues","landing","circle","landingInfo","buttons","MockupLanding","landingImage","App","Helmet","charSet","path","element","Landing","ReactDOM","render"],"mappings":"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","file":"static/js/main.2edb9af6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"modal_background__35bdD\",\"header\":\"modal_header__3hSgT\",\"content\":\"modal_content__1KJrv\",\"double\":\"modal_double__2q9VD\",\"footer\":\"modal_footer__2VzJE\",\"link\":\"modal_link__S1uAq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"project_contentContainer__1vDqq\",\"hero\":\"project_hero__2JRqk\",\"main\":\"project_main__1F5LS\",\"primaryBio\":\"project_primaryBio__2w5ar\",\"about\":\"project_about__uo5r9\",\"secondaryBio\":\"project_secondaryBio__3wix7\",\"masonry\":\"project_masonry__3MbIp\",\"masonryColumn\":\"project_masonryColumn__3RtRp\"};","export default __webpack_public_path__ + \"static/media/Github.6ab8e150.svg\";","export default __webpack_public_path__ + \"static/media/Instagram.91878c29.svg\";","export default __webpack_public_path__ + \"static/media/Twitter.a26273c5.svg\";","export default __webpack_public_path__ + \"static/media/Kelvin.e9ddc21e.png\";","import { createContext } from 'react';\n\nimport Data from 'assets/json/user.json';\n\nexport const Context = createContext({});\n\nconst UserContext = ({ children }) => (\n  <Context.Provider value={Data}>{children}</Context.Provider>\n);\n\nexport default UserContext;\n","export default __webpack_public_path__ + \"static/media/left.a1b2792c.svg\";","export default __webpack_public_path__ + \"static/media/right.8223bba0.svg\";","export default __webpack_public_path__ + \"static/media/close.86beb770.svg\";","export default __webpack_public_path__ + \"static/media/projects.a77d10f1.svg\";","export default __webpack_public_path__ + \"static/media/experience.409a86c9.svg\";","export default __webpack_public_path__ + \"static/media/home.4d386f8d.svg\";","export default __webpack_public_path__ + \"static/media/settings.8350311f.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport leftIcon from 'assets/icons/left.svg';\nimport rightIcon from 'assets/icons/right.svg';\nimport closeIcon from 'assets/icons/close.svg';\nimport projectsIcon from 'assets/icons/projects.svg';\nimport experienceIcon from 'assets/icons/experience.svg';\nimport homeIcon from 'assets/icons/home.svg';\nimport settingsIcon from 'assets/icons/settings.svg';\n\nimport {\n  button,\n  green,\n  red,\n  white,\n  borderless,\n  icon,\n} from './button.module.scss';\n\nvar classes = {\n  green: green,\n  red: red,\n  white: white,\n  borderless: borderless,\n  icon: icon,\n};\n\nvar icons = {\n  left: leftIcon,\n  right: rightIcon,\n  close: closeIcon,\n  projects: projectsIcon,\n  experience: experienceIcon,\n  home: homeIcon,\n  settings: settingsIcon,\n};\n\nconst Button = ({ color, handle, img, text, type = 'button', disabled }) => {\n  return (\n    <button\n      type={type}\n      className={`${button} ${classes[color]}`}\n      onClick={handle}\n      disabled={disabled}\n    >\n      {img ? <img src={icons[img]} alt={img} width={28} /> : ''}\n      <span>{text}</span>\n    </button>\n  );\n};\n\nButton.propTypes = {\n  color: PropTypes.string,\n  handle: PropTypes.func,\n  img: PropTypes.string,\n  text: PropTypes.string,\n  type: PropTypes.string,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\n\nimport Button from '../elements/button/Button';\n\nimport {\n  header,\n  headerTransparent,\n  hideTitle,\n  pageInfo,\n} from './header.module.scss';\n\nconst navigation = {\n  Home: ['experience', 'projects'],\n  Projects: ['home', 'experience'],\n  Experience: ['projects', 'home'],\n};\n\nconst Header = ({ pageTitle, noFill, hide, openModal }) => {\n  const navigate = useNavigate();\n\n  const getTitle = (index) => {\n    if (noFill) return 'Projects';\n    return navigation[pageTitle] ? navigation[pageTitle][index] : pageTitle;\n  };\n\n  const getPath = (index) => {\n    if (noFill) return '/projects';\n    return '/' + navigation[pageTitle][index];\n  };\n\n  return (\n    <header\n      className={`${header} ${\n        noFill ? headerTransparent : hide ? hideTitle : null\n      }`}\n    >\n      <nav>\n        <Button\n          handle={() => navigate(getPath(0))}\n          text={getTitle(0)}\n          img=\"left\"\n          color=\"borderless\"\n        />\n        {!noFill ? (\n          <Button\n            handle={() => navigate(getPath(1))}\n            text={getTitle(1)}\n            img=\"right\"\n            color=\"borderless\"\n          />\n        ) : null}\n      </nav>\n      <div className={pageInfo}>\n        {!hide ? (\n          <h1>\n            {pageTitle}\n            <span>.</span>\n          </h1>\n        ) : null}\n        <Button handle={openModal} text=\"Edit\" color=\"white\" />\n      </div>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  pageTitle: PropTypes.string,\n  noFill: PropTypes.bool,\n  hide: PropTypes.bool,\n  openModal: PropTypes.func,\n};\n\nexport default Header;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport Button from '../elements/button/Button';\n\nimport { nav } from './navigation.module.scss';\n\nconst Header = () => {\n  const navigate = useNavigate();\n\n  return (\n    <nav className={nav}>\n      <Button handle={() => navigate('/home')} img=\"home\" color=\"icon\" />\n      <Button\n        handle={() => navigate('/projects')}\n        img=\"projects\"\n        color=\"icon\"\n      />\n      <Button\n        handle={() => navigate('/experience')}\n        img=\"experience\"\n        color=\"icon\"\n      />\n      <Button handle={() => navigate('/')} img=\"settings\" color=\"icon\" />\n    </nav>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Header from '../header';\nimport Navigation from '../navigation';\n\nconst Layout = ({ pageTitle, noFill, hide, children, openModal }) => (\n  <>\n    <Header\n      pageTitle={pageTitle}\n      noFill={noFill}\n      hide={hide}\n      openModal={openModal}\n    />\n    {children}\n    <Navigation />\n  </>\n);\n\nexport default Layout;\n\nLayout.propTypes = {\n  pageTitle: PropTypes.string,\n  noFill: PropTypes.bool,\n  hide: PropTypes.bool,\n  children: PropTypes.node,\n  openModal: PropTypes.func,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'components/shared/elements/button';\n\nimport { background, header, content, footer, link } from './modal.module.scss';\n\nconst Modal = ({\n  children,\n  title,\n  handleButton,\n  handleClose,\n  footerContent,\n  isSubmitting,\n}) => {\n  const [isMaxHeight, setIsMaxHeight] = useState(false);\n\n  useEffect(() => {\n    const contentHeight = document.getElementById('content')?.offsetHeight;\n    contentHeight >= 528 ? setIsMaxHeight(true) : setIsMaxHeight(false);\n  }, []);\n\n  return (\n    <div className={background}>\n      <aside>\n        <div className={header}>\n          <h3>{title}</h3>\n          <Button handle={handleClose} img=\"close\" color=\"icon\" />\n        </div>\n        <div id=\"content\" className={content}>\n          {children}\n        </div>\n        <div\n          className={footer}\n          style={{\n            boxShadow: isMaxHeight\n              ? '0 -0.25rem 2.5rem 0.5rem rgba(0, 0, 0, 0.25)'\n              : null,\n          }}\n        >\n          <Button\n            type={!handleButton ? 'submit' : 'button'}\n            handle={handleButton ? handleButton : null}\n            color={!handleButton ? 'green' : 'white'}\n            text={!handleButton ? 'Submit' : 'Add'}\n            disabled={isSubmitting}\n          />\n          {footerContent ? <span className={link}>{footerContent}</span> : null}\n        </div>\n      </aside>\n    </div>\n  );\n};\n\nexport default Modal;\n\nModal.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  isSubmit: PropTypes.bool,\n  onChange: PropTypes.func,\n  footerContent: PropTypes.node,\n  initialValues: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\n\nimport Modal from 'components/shared/modal';\n\nconst FormWrapper = ({ children, initialValues, schema, title, handleClose, footerContent }) => (\n  <>\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={() => {}}\n    >\n      {(formik) => (\n        <form onSubmit={formik.handleSubmit}>\n          <Modal\n            title={title}\n            isSubmitting={formik.isSubmitting}\n            handleClose={handleClose}\n            isSubmit\n            footerContent={footerContent}\n          >\n            {children(formik)}\n          </Modal>\n        </form>\n      )}\n    </Formik>\n  </>\n);\n\nexport default FormWrapper;\n\nFormWrapper.propTypes = {\n  children: PropTypes.func.isRequired,\n  initialValues: PropTypes.object.isRequired,\n  schema: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  footerContent: PropTypes.node,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { wrapper } from './info-element.module.scss';\n\nconst InfoElement = ({ label, content }) => (\n  <div className={wrapper}>\n    <span>{label}</span>\n    <span>{content}</span>\n  </div>\n);\n\nexport default InfoElement;\n\nInfoElement.propTypes = {\n  label: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/required.375a3625.svg\";","export default __webpack_public_path__ + \"static/media/requiredError.8fd41a1a.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport required from 'assets/icons/required.svg';\nimport requiredError from 'assets/icons/requiredError.svg';\n\nimport { input, red, errorMessage } from './input.module.scss';\n\nconst Input = ({\n  label,\n  isRequired,\n  name,\n  type,\n  placeholder,\n  value,\n  handleChange,\n  error,\n}) => (\n  <div className={input}>\n    <div>\n      <label htmlFor={name}>{label}</label>\n      {isRequired ? (\n        <img src={error ? requiredError : required} alt=\"Required Icon\" />\n      ) : null}\n    </div>\n    <input\n      id={name}\n      type={type}\n      value={value}\n      onChange={handleChange}\n      placeholder={placeholder}\n      className={error ? red : null}\n    />\n    <span className={errorMessage}>{error}</span>\n  </div>\n);\n\nexport default Input;\n\nInput.propTypes = {\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport required from 'assets/icons/required.svg';\nimport requiredError from 'assets/icons/requiredError.svg';\n\nimport { textarea, red, errorMessage } from './textarea.module.scss';\n\nconst Textarea = ({\n  label,\n  isRequired,\n  name,\n  placeholder,\n  value,\n  handleChange,\n  error,\n}) => (\n  <div className={textarea}>\n    <div>\n      <label htmlFor={name}>{label}</label>\n      {isRequired ? (\n        <img src={error ? requiredError : required} alt=\"Required Icon\" />\n      ) : null}\n    </div>\n    <textarea\n      id={name}\n      placeholder={placeholder}\n      value={value}\n      onChange={handleChange}\n      className={error ? red : null}\n    />\n    <span className={errorMessage}>{error}</span>\n  </div>\n);\n\nexport default Textarea;\n\nTextarea.propTypes = {\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Input from 'components/shared/forms/input';\nimport Textarea from 'components/shared/forms/textarea';\n\nconst ContactForm = ({ formik }) => (\n  <>\n    <Input\n      name=\"contactName\"\n      type=\"text\"\n      value={formik.values.contactName}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.contactName &&\n        formik.touched?.contactName &&\n        formik.errors?.contactName\n      }\n      placeholder=\"Insert your name\"\n      label=\"Name\"\n      isRequired\n    />\n    {}\n    <Input\n      name=\"contactEmail\"\n      type=\"text\"\n      value={formik.values.contactEmail}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.contactEmail &&\n        formik.touched?.contactEmail &&\n        formik.errors?.contactEmail\n      }\n      placeholder=\"Insert your e-mail\"\n      label=\"E-mail\"\n      isRequired\n    />\n    <Textarea\n      name=\"contactMessage\"\n      value={formik.values.contactMessage}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.contactMessage &&\n        formik.touched?.contactMessage &&\n        formik.errors?.contactMessage\n      }\n      placeholder=\"Tell me what you need\"\n      label=\"Message\"\n      isRequired\n    />\n  </>\n);\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  formik: PropTypes.shape({\n    values: PropTypes.object,\n    handleChange: PropTypes.func,\n    errors: PropTypes.object,\n    touched: PropTypes.object,\n  }),\n};\n","import * as Yup from 'yup';\n\nexport const initialValues = {\n  contactName: '',\n  contactEmail: '',\n  contactMessage: '',\n};\n\nexport const contactFormSchema = Yup.object().shape({\n  contactName: Yup.string().required('Required'),\n  contactEmail: Yup.string().email('Invalid email').required('Required'),\n  contactMessage: Yup.string().required('Required'),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { title } from './form-title.module.scss';\n\nconst FormTitle = ({ text, isList }) => (\n  <h3 className={title} style={{ marginBottom: isList ? '2rem' : '0.5rem' }}>\n    {text}\n  </h3>\n);\n\nexport default FormTitle;\n\nFormTitle.propTypes = {\n  text: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Input from 'components/shared/forms/input';\nimport Textarea from 'components/shared/forms/textarea';\nimport FormTitle from 'components/shared/forms/form-title';\n\nimport { double } from 'components/shared/modal/modal.module.scss';\n\nconst EditInfoForm = ({ formik }) => (\n  <>\n    <FormTitle text=\"about\" />\n    <Input\n      name=\"userName\"\n      type=\"text\"\n      value={formik.values.userName}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.userName &&\n        formik.touched?.userName &&\n        formik.errors?.userName\n      }\n      placeholder=\"Insert your name\"\n      label=\"Name\"\n      isRequired\n    />\n    <Textarea\n      name=\"userBio\"\n      value={formik.values.userBio}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.userBio &&\n        formik.touched?.userBio &&\n        formik.errors?.userBio\n      }\n      placeholder=\"Give a description of yourself\"\n      label=\"Bio\"\n      isRequired\n    />\n    <div className={double}>\n      <Input\n        name=\"userRole\"\n        type=\"text\"\n        value={formik.values.userRole}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.userRole &&\n          formik.touched?.userRole &&\n          formik.errors?.userRole\n        }\n        placeholder=\"Insert your job role\"\n        label=\"Role\"\n        isRequired\n      />\n      <Input\n        name=\"userLocation\"\n        type=\"text\"\n        value={formik.values.userLocation}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.userLocation &&\n          formik.touched?.userLocation &&\n          formik.errors?.userLocation\n        }\n        placeholder=\"Insert your current location\"\n        label=\"Location\"\n      />\n    </div>\n    <div className={double}>\n      <Input\n        name=\"userEmail\"\n        type=\"text\"\n        value={formik.values.userEmail}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.userEmail &&\n          formik.touched?.userEmail &&\n          formik.errors?.userEmail\n        }\n        placeholder=\"Insert your e-mail\"\n        label=\"E-mail\"\n      />\n      <Input\n        name=\"userPhone\"\n        type=\"tel\"\n        value={formik.values.userPhone}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.userPhone &&\n          formik.touched?.userPhone &&\n          formik.errors?.userPhone\n        }\n        placeholder=\"Insert your phone number\"\n        label=\"Phone\"\n      />\n    </div>\n    <FormTitle text=\"social\" />\n    <div className={double}>\n      <Input\n        name=\"userBehance\"\n        type=\"text\"\n        value={formik.values.userBehance}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.userBehance &&\n          formik.touched?.userBehance &&\n          formik.errors?.userBehance\n        }\n        placeholder=\"Insert your behance account\"\n        label=\"Behance\"\n      />\n      <Input\n        name=\"userGitHub\"\n        type=\"text\"\n        value={formik.values.userGitHub}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.userGitHub &&\n          formik.touched?.userGitHub &&\n          formik.errors?.userGitHub\n        }\n        placeholder=\"Insert your gitHub account\"\n        label=\"GitHub\"\n      />\n    </div>\n    <div className={double}>\n      <Input\n        name=\"userLinkedIn\"\n        type=\"text\"\n        value={formik.values.userLinkedIn}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.userLinkedIn &&\n          formik.touched?.userLinkedIn &&\n          formik.errors?.userLinkedIn\n        }\n        placeholder=\"Insert your linkedIn account\"\n        label=\"LinkedIn\"\n      />\n      <Input\n        name=\"userInstagram\"\n        type=\"text\"\n        value={formik.values.userInstagram}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.userInstagram &&\n          formik.touched?.userInstagram &&\n          formik.errors?.userInstagram\n        }\n        placeholder=\"Insert your instagram account\"\n        label=\"Instagram\"\n      />\n    </div>\n    <div className={double}>\n      <Input\n        name=\"userTwitter\"\n        type=\"text\"\n        value={formik.values.userTwitter}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.userTwitter &&\n          formik.touched?.userTwitter &&\n          formik.errors?.userTwitter\n        }\n        placeholder=\"Insert twitter account\"\n        label=\"Twitter\"\n      />\n      <Input\n        name=\"userDribble\"\n        type=\"text\"\n        value={formik.values.userDribble}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.userDribble &&\n          formik.touched?.userDribble &&\n          formik.errors?.userDribble\n        }\n        placeholder=\"Insert your dribble account\"\n        label=\"Dribble\"\n      />\n    </div>\n  </>\n);\n\nexport default EditInfoForm;\n\nEditInfoForm.propTypes = {\n  formik: PropTypes.shape({\n    values: PropTypes.object,\n    handleChange: PropTypes.func,\n    errors: PropTypes.object,\n    touched: PropTypes.object,\n  }),\n};\n","import * as Yup from 'yup';\n\nexport const initialValues = (user) => ({\n  userName: user?.name ?? '',\n  userBio: user?.bio ?? '',\n  userRole: user?.role ?? '',\n  userLocation: user?.location ?? '',\n  userEmail: user?.email ?? '',\n  userPhone: user?.phone ?? '',\n  userBehance: user?.social?.behance ?? '',\n  userGitHub: user?.social?.Github ?? '',\n  userLinkedIn: user?.social?.Linkedin ?? '',\n  userInstagram: user?.social?.Instagram ?? '',\n  userTwitter: user?.social?.Twitter ?? '',\n  userDribble: user?.social?.Dribble ?? '',\n});\n\nexport const editInfoFormSchema = Yup.object().shape({\n  userName: Yup.string().required('Required'),\n  userBio: Yup.string().required('Required'),\n  userRole: Yup.string().required('Required'),\n  userEmail: Yup.string().email('Invalid email'),\n});\n","import React, { useState, useContext } from 'react';\n\nimport GithubIcon from 'assets/icons/Github.svg';\nimport InstagramIcon from 'assets/icons/Instagram.svg';\nimport TwitterIcon from 'assets/icons/Twitter.svg';\nimport Kelvin from 'assets/images/Kelvin.png';\n\nimport { Context } from 'context/userContext';\n\nimport Layout from 'components/shared/layout';\nimport Button from 'components/shared/elements/button';\nimport FormWrapper from 'components/shared/forms/form-wrapper';\nimport InfoElement from 'components/home/info-element';\n\nimport ContactForm from 'components/home/forms/contact-form';\nimport {\n  initialValues as contactFormValues,\n  contactFormSchema,\n} from 'components/home/forms/contact-form/utils';\nimport EditInfoForm from 'components/home/forms/edit-info-form';\nimport {\n  initialValues as editInfoFormValues,\n  editInfoFormSchema,\n} from 'components/home/forms/edit-info-form/utils';\n\nimport {\n  contentContainer,\n  about,\n  footer,\n  imageGroup,\n} from './home.module.scss';\n\nconst icons = {\n  Github: GithubIcon,\n  Instagram: InstagramIcon,\n  Twitter: TwitterIcon,\n};\n\nconst Home = () => {\n  const [contactOpen, setContactOpen] = useState(false);\n  const [editInfoOpen, setEditInfoOpen] = useState(false);\n  const { info } = useContext(Context);\n\n  const modal = (isContact) => (\n    <FormWrapper\n      initialValues={isContact ? contactFormValues : editInfoFormValues(info)}\n      schema={isContact ? contactFormSchema : editInfoFormSchema}\n      title={isContact ? 'Contact Me' : 'Edit your info'}\n      handleClose={() =>\n        isContact ? setContactOpen(false) : setEditInfoOpen(false)\n      }\n    >\n      {(formik) =>\n        isContact ? (\n          <ContactForm formik={formik} />\n        ) : (\n          <EditInfoForm formik={formik} />\n        )\n      }\n    </FormWrapper>\n  );\n\n  return (\n    <Layout pageTitle=\"Home\" hide openModal={() => setEditInfoOpen(true)}>\n      {contactOpen ? modal(true) : null}\n      {editInfoOpen ? modal(false) : null}\n      <section className={contentContainer}>\n        <div className={about}>\n          <h1>\n            Hello, I'm <span>{info?.name.split(' ')[0]}</span>\n          </h1>\n          <h3>{info?.role}</h3>\n          <p>{info?.bio}</p>\n          <Button\n            handle={() => setContactOpen(true)}\n            text=\"Contact\"\n            img=\"right\"\n            color=\"green\"\n          />\n          <div>\n            {Object.entries(info?.social).map((x) => {\n              if (x[1] !== '') {\n                return (\n                  <a href={x[1]} key={x[0]}>\n                    <img src={icons[x[0]]} alt={x[0] + ' Icon'} />\n                  </a>\n                );\n              } else {\n                return null;\n              }\n            })}\n          </div>\n          <div className={footer}>\n            <InfoElement label=\"E-mail\" content={info?.email} />\n            <InfoElement label=\"Phone\" content={info?.phone} />\n            <InfoElement label=\"Location\" content={info?.location} />\n          </div>\n        </div>\n        <div className={imageGroup}>\n          <img src={Kelvin} alt=\"User\" />\n        </div>\n      </section>\n    </Layout>\n  );\n};\n\nexport default Home;\n","import { useState, useEffect } from 'react';\n\nconst useMousePosition = () => {\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    const setFromEvent = (e) => setPosition({ x: e.clientX, y: e.clientY });\n    window.addEventListener('mousemove', setFromEvent);\n    return () => {\n      window.removeEventListener('mousemove', setFromEvent);\n    };\n  }, []);\n\n  return position;\n};\n\nexport default useMousePosition;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Ticker from 'react-ticker';\n\nimport useMousePosition from './useMousePosition';\nimport { card } from './project-card.module.scss';\n\nconst ProjectCard = ({ project }) => {\n  const navigate = useNavigate();\n  const position = useMousePosition();\n\n  return (\n    <>\n      <Ticker mode=\"chain\" speed={2}>\n        {() => (\n          <div className={card} key={project.id}>\n            <button onClick={() => navigate(`/projects/${project.id}`)}>\n              {project.name}.{' '}\n            </button>\n            <img\n              src={project.banner}\n              alt=\"project-banner\"\n              style={{ left: position.x + 'px', top: position.y + 'px' }}\n            />\n          </div>\n        )}\n      </Ticker>\n    </>\n  );\n};\n\nexport default ProjectCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { input } from './files-input.module.scss';\n\nconst FilesInput = ({ label, name }) => {\n  return (\n    <div className={input}>\n      <label htmlFor={name}>\n        <div>{label}</div>\n      </label>\n      <input id={name} type=\"file\" />\n    </div>\n  );\n};\n\nexport default FilesInput;\n\nFilesInput.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Input from 'components/shared/forms/input';\nimport Textarea from 'components/shared/forms/textarea';\nimport FilesInput from 'components/shared/forms/files-input';\nimport FormTitle from 'components/shared/forms/form-title';\n\nimport { double } from 'components/shared/modal/modal.module.scss';\n\nconst AddProjectForm = ({ formik }) => (\n  <>\n    <FormTitle text=\"general\" />\n    <Input\n      name=\"projectTitle\"\n      type=\"text\"\n      value={formik.values.projectTitle}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.projectTitle &&\n        formik.touched?.projectTitle &&\n        formik.errors?.projectTitle\n      }\n      placeholder=\"Insert the title of your project\"\n      label=\"Title\"\n      isRequired\n    />\n    <Input\n      name=\"projectQuote\"\n      type=\"text\"\n      value={formik.values.projectQuote}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.projectQuote &&\n        formik.touched?.projectQuote &&\n        formik.errors?.projectQuote\n      }\n      placeholder=\"Insert the quote of your project\"\n      label=\"Quote\"\n      isRequired\n    />\n    <FormTitle text=\"first description\" />\n    <Input\n      name=\"projectFirstDescriptionTitle\"\n      type=\"text\"\n      value={formik.values.projectFirstDescriptionTitle}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.projectFirstDescriptionTitle &&\n        formik.touched?.projectFirstDescriptionTitle &&\n        formik.errors?.projectFirstDescriptionTitle\n      }\n      placeholder=\"Insert the title of the first description\"\n      label=\"Title\"\n      isRequired\n    />\n    <Textarea\n      name=\"projectFirstDescription\"\n      value={formik.values.projectFirstDescription}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.projectFirstDescription &&\n        formik.touched?.projectFirstDescription &&\n        formik.errors?.projectFirstDescription\n      }\n      placeholder=\"Give an initial description of your project\"\n      label=\"Description\"\n      isRequired\n    />\n    <FormTitle text=\"second description\" />\n    <Input\n      name=\"projectSecondDescriptionTitle\"\n      type=\"text\"\n      value={formik.values.projectSecondDescriptionTitle}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.projectSecondDescriptionTitle &&\n        formik.touched?.projectSecondDescriptionTitle &&\n        formik.errors?.projectSecondDescriptionTitle\n      }\n      placeholder=\"Insert the title of the second description\"\n      label=\"Title\"\n      isRequired\n    />\n    <Textarea\n      name=\"projectSecondDescription\"\n      value={formik.values.projectSecondDescription}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.projectSecondDescription &&\n        formik.touched?.projectSecondDescription &&\n        formik.errors?.projectSecondDescription\n      }\n      placeholder=\"Give a final description of your project\"\n      label=\"Description\"\n      isRequired\n    />\n    <FormTitle text=\"about\" />\n    <div className={double}>\n      <Input\n        name=\"projectSubject\"\n        type=\"text\"\n        value={formik.values.projectSubject}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.projectSubject &&\n          formik.touched?.projectSubject &&\n          formik.errors?.projectSubject\n        }\n        placeholder=\"What is your project about?\"\n        label=\"Subject\"\n      />\n      <Input\n        name=\"projectDate\"\n        type=\"date\"\n        value={formik.values.projectDate}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.projectDate &&\n          formik.touched?.projectDate &&\n          formik.errors?.projectDate\n        }\n        placeholder=\"--/--/--\"\n        label=\"Date\"\n      />\n    </div>\n    <div className={double}>\n      <Input\n        name=\"projectPlatforms\"\n        type=\"text\"\n        value={formik.values.projectPlatforms}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.projectPlatforms &&\n          formik.touched?.projectPlatforms &&\n          formik.errors?.projectPlatforms\n        }\n        placeholder=\"Where can we use it?\"\n        label=\"Platforms\"\n      />\n      <Input\n        name=\"projectTechnologies\"\n        type=\"text\"\n        value={formik.values.projectTechnologies}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.projectTechnologies &&\n          formik.touched?.projectTechnologies &&\n          formik.errors?.projectTechnologies\n        }\n        placeholder=\"What did you use for it?\"\n        label=\"Technologies\"\n      />\n    </div>\n    <FormTitle text=\"gallery\" />\n    <FilesInput name=\"projectImages\" label=\"Upload images (4 max)\" />\n  </>\n);\n\nexport default AddProjectForm;\n\nAddProjectForm.propTypes = {\n  formik: PropTypes.shape({\n    values: PropTypes.object,\n    handleChange: PropTypes.func,\n    errors: PropTypes.object,\n    touched: PropTypes.object,\n  }),\n};\n","import * as Yup from 'yup';\n\nexport const initialValues = (project) => ({\n  projectTitle: project?.name ?? '',\n  projectQuote: project?.quote ?? '',\n  projectFirstDescriptionTitle: project?.primaryDescription.title ?? '',\n  projectFirstDescription: project?.primaryDescription.description ?? '',\n  projectSecondDescriptionTitle: project?.secondaryDescription.title ?? '',\n  projectSecondDescription: project?.secondaryDescription.description ?? '',\n  projectSubject: project?.about.subject ?? '',\n  projectDate: project?.about.year ?? '',\n  projectPlatforms: project?.about.platforms ?? '',\n  projectTechnologies: project?.about.technologies ?? '',\n  projectImages: project?.description ?? '',\n});\n\nexport const addProjectFormSchema = Yup.object().shape({\n  projectTitle: Yup.string().required('Required'),\n  projectQuote: Yup.string().required('Required'),\n  projectFirstDescriptionTitle: Yup.string().required('Required'),\n  projectFirstDescription: Yup.string().required('Required'),\n  projectSecondDescriptionTitle: Yup.string().required('Required'),\n  projectSecondDescription: Yup.string().required('Required'),\n  projectDate: Yup.date(),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'components/shared/elements/button';\n\nimport { wrapper, controls } from './list-element.module.scss';\n\nconst ListElement = ({ name, editHandle }) => (\n  <div className={wrapper}>\n    <span>{name}</span>\n    <div className={controls}>\n      <Button text=\"edit\" color=\"borderless\" handle={editHandle} />\n      <Button text=\"delete\" color=\"borderless\" handle={() => {}} />\n    </div>\n  </div>\n);\n\nexport default ListElement;\n\nListElement.propTypes = {\n  name: PropTypes.string.isRequired,\n  editHandle: PropTypes.func.isRequired,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Context } from 'context/userContext';\n\nimport ListElement from 'components/shared/forms/list-element';\n\nconst MyProjectsForm = ({ handle }) => {\n  const navigate = useNavigate();\n  const { projects } = useContext(Context);\n\n  const editHandle = (id) => {\n    handle();\n    navigate(`/projects?id=${id}`);\n  };\n\n  return (\n    <>\n      {projects.map(({ name, id }) => (\n        <ListElement name={name} key={id} editHandle={() => editHandle(id)} />\n      ))}\n    </>\n  );\n};\n\nexport default MyProjectsForm;\n\nMyProjectsForm.propTypes = {\n  handle: PropTypes.func.isRequired,\n};","import React, { useState, useContext } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nimport { Context } from 'context/userContext';\n\nimport Layout from 'components/shared/layout';\nimport Modal from 'components/shared/modal';\nimport FormWrapper from 'components/shared/forms/form-wrapper';\nimport ProjectCard from 'components/projects/project-card';\n\nimport AddProjectForm from 'components/projects/forms/add-project-form';\nimport {\n  initialValues,\n  addProjectFormSchema,\n} from 'components/projects/forms/add-project-form/utils';\nimport MyProjectsForm from 'components/projects/forms/my-projects-form';\n\nimport { contentContainer } from './projects-list.module.scss';\n\nconst ProjectsList = () => {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const [addProjectOpen, setAddProjectOpen] = useState(false);\n  const [myProjectsOpen, setMyProjectsOpen] = useState(false);\n  const { projects } = useContext(Context);\n  const project = projects.find(\n    ({ id }) => id === parseInt(searchParams.get('id'))\n  );\n\n  const handleButton = () => {\n    setMyProjectsOpen(false);\n    setAddProjectOpen(true);\n    navigate(`/projects`);\n  };\n\n  const modal = (isList) =>\n    isList ? (\n      <FormWrapper\n        initialValues={initialValues(project)}\n        schema={addProjectFormSchema}\n        title=\"Add project\"\n        handleClose={() => setAddProjectOpen(false)}\n      >\n        {(formik) => <AddProjectForm formik={formik} />}\n      </FormWrapper>\n    ) : (\n      <Modal\n        title=\"My projects\"\n        handleClose={() => setMyProjectsOpen(false)}\n        handleButton={() => handleButton()}\n      >\n        <MyProjectsForm handle={() => handleButton()} />\n      </Modal>\n    );\n\n  return (\n    <Layout pageTitle=\"Projects\" openModal={() => setMyProjectsOpen(true)}>\n      <section className={contentContainer}>\n        {addProjectOpen ? modal(true) : null}\n        {myProjectsOpen ? modal(false) : null}\n        {projects.map((project) => (\n          <ProjectCard project={project} key={project.id} />\n        ))}\n      </section>\n    </Layout>\n  );\n};\n\nexport default ProjectsList;\n","import React, { useContext, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Masonry from 'react-masonry-css';\n\nimport { Context } from 'context/userContext';\n\nimport Layout from 'components/shared/layout/Layout';\nimport FormWrapper from 'components/shared/forms/form-wrapper';\n\nimport AddProjectForm from 'components/projects/forms/add-project-form';\nimport {\n  initialValues,\n  addProjectFormSchema,\n} from 'components/projects/forms/add-project-form/utils';\n\nimport {\n  contentContainer,\n  hero,\n  main,\n  primaryBio,\n  about,\n  secondaryBio,\n  masonry,\n  masonryColumn,\n} from './project.module.scss';\n\nconst Project = () => {\n  const [editProject, setEditProject] = useState(false);\n  const { projectId } = useParams();\n  const { projects } = useContext(Context);\n  const project = projects.find(({ id }) => id === parseInt(projectId));\n\n  const breakpointColumnsObj = {\n    default: 2,\n    800: 1,\n  };\n\n  const modal = () => (\n    <FormWrapper\n      initialValues={initialValues(project)}\n      schema={addProjectFormSchema}\n      title={project.name}\n      handleClose={() => setEditProject(false)}\n    >\n      {(formik) => <AddProjectForm formik={formik} />}\n    </FormWrapper>\n  );\n\n  return (\n    <Layout\n      pageTitle={project.name}\n      noFill\n      openModal={() => setEditProject(true)}\n    >\n      {editProject ? modal(true) : null}\n      <div className={contentContainer}>\n        <div className={hero}>\n          <img src={project.banner} alt=\"project-banner\" />\n          <h1>\n            {project.name}. {project.name}.\n          </h1>\n        </div>\n        <div className={main}>\n          <div className={primaryBio}>\n            <div className={about}>\n              <div>\n                <span>Subject</span>\n                <span>{project.about.subject}</span>\n              </div>\n              <div>\n                <span>Platforms</span>\n                <span>{project.about.platforms}</span>\n              </div>\n              <div>\n                <span>Technologies</span>\n                <span>{project.about.technologies}</span>\n              </div>\n              <div>\n                <span>Year</span>\n                <span>{project.about.year}</span>\n              </div>\n            </div>\n            <div>\n              <h3>{project.primaryDescription.title}</h3>\n              <p>{project.primaryDescription.description}</p>\n              <h4>\"{project.quote}\"</h4>\n            </div>\n          </div>\n          <img\n            src={project.primaryDescription.image}\n            alt=\"description-illustration\"\n          />\n          <div className={secondaryBio}>\n            <img\n              src={project.secondaryDescription.image}\n              alt=\"description-illustration\"\n            />\n            <div>\n              <h3>{project.secondaryDescription.title}</h3>\n              <p>{project.secondaryDescription.description}</p>\n            </div>\n          </div>\n          <Masonry\n            breakpointCols={breakpointColumnsObj}\n            className={masonry}\n            columnClassName={masonryColumn}\n          >\n            {project.gallery.map((img) => (\n              <img src={img} alt=\"project-img\" />\n            ))}\n          </Masonry>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Project;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Input from 'components/shared/forms/input';\nimport FilesInput from 'components/shared/forms/files-input';\n\nconst AddExperienceForm = ({ formik }) => (\n  <>\n    <Input\n      name=\"experienceTitle\"\n      type=\"text\"\n      value={formik.values.experienceTitle}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.experienceTitle &&\n        formik.touched?.experienceTitle &&\n        formik.errors?.experienceTitle\n      }\n      placeholder=\"Insert the title of your milestone\"\n      label=\"Title\"\n      isRequired\n    />\n    <Input\n      name=\"experienceDate\"\n      type=\"date\"\n      value={formik.values.experienceDate}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.experienceDate &&\n        formik.touched?.experienceDate &&\n        formik.errors?.experienceDate\n      }\n      placeholder=\"--/--/--\"\n      label=\"Date\"\n      isRequired\n    />\n    <FilesInput name=\"experienceImages\" label=\"Upload image (1 max)\" />\n  </>\n);\n\nexport default AddExperienceForm;\n\nAddExperienceForm.propTypes = {\n  formik: PropTypes.shape({\n    values: PropTypes.object,\n    handleChange: PropTypes.func,\n    errors: PropTypes.object,\n    touched: PropTypes.object,\n  }),\n};\n","import * as Yup from 'yup';\n\nexport const initialValues = (experience) => ({\n  experienceTitle: experience?.name ?? '',\n  experienceDate: experience?.date ?? '',\n  experienceImages: experience?.images ?? '',\n});\n\nexport const addExperienceFormSchema = Yup.object().shape({\n  experienceTitle: Yup.string().required('Required'),\n  experienceDate: Yup.date().required('Required'),\n});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Context } from 'context/userContext';\n\nimport FormTitle from 'components/shared/forms/form-title';\nimport ListElement from 'components/shared/forms/list-element';\n\nconst MyExperienceForm = ({ handle }) => {\n  const navigate = useNavigate();\n  const { experiences } = useContext(Context);\n\n  let currentYear = '';\n\n  const editHandle = (id) => {\n    handle();\n    navigate(`/experience?id=${id}`);\n  };\n\n  const addTitle = (date, year) => {\n    currentYear = new Date(date).getFullYear();\n    return <FormTitle text={'' + year} isList />;\n  };\n\n  return (\n    <>\n      {experiences.map(({ name, id, date }) => {\n        const year = new Date(date).getFullYear();\n\n        return (\n          <React.Fragment key={id}>\n            {year === currentYear ? null : addTitle(date, year, id)}\n            <ListElement name={name} editHandle={() => editHandle(id)} />\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n};\n\nexport default MyExperienceForm;\n\nMyExperienceForm.propTypes = {\n  handle: PropTypes.func.isRequired,\n};\n","import React, { useState, useContext } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nimport { Context } from 'context/userContext';\n\nimport Layout from 'components/shared/layout';\nimport Modal from 'components/shared/modal';\nimport FormWrapper from 'components/shared/forms/form-wrapper';\n\nimport AddExperienceForm from 'components/experience/forms/add-experience-form';\nimport {\n  initialValues,\n  addExperienceFormSchema,\n} from 'components/experience/forms/add-experience-form/utils';\nimport MyExperienceForm from 'components/experience/forms/my-experience-form';\n\nconst Experience = () => {\n  const navigate = useNavigate();\n  const [addExperienceOpen, setAddExperienceOpen] = useState(false);\n  const [myExperienceOpen, setMyExperienceOpen] = useState(false);\n  const [searchParams] = useSearchParams();\n  const { experiences } = useContext(Context);\n\n  const experience = experiences.find(\n    ({ id }) => id === parseInt(searchParams.get('id'))\n  );\n\n  const handleButton = () => {\n    setMyExperienceOpen(false);\n    setAddExperienceOpen(true);\n    navigate(`/experience`);\n  };\n\n  const modal = (isList) =>\n    isList ? (\n      <FormWrapper\n        initialValues={initialValues(experience)}\n        schema={addExperienceFormSchema}\n        title=\"Add experience\"\n        handleClose={() => setAddExperienceOpen(false)}\n      >\n        {(formik) => <AddExperienceForm formik={formik} />}\n      </FormWrapper>\n    ) : (\n      <Modal\n        title=\"My experience\"\n        handleClose={() => setMyExperienceOpen(false)}\n        handleButton={() => handleButton()}\n      >\n        <MyExperienceForm handle={() => handleButton()} />\n      </Modal>\n    );\n\n  return (\n    <Layout pageTitle=\"Experience\" openModal={() => setMyExperienceOpen(true)}>\n      <section>\n        {addExperienceOpen ? modal(true) : null}\n        {myExperienceOpen ? modal(false) : null}\n        <h1>Experience.</h1>\n      </section>\n    </Layout>\n  );\n};\n\nexport default Experience;\n","import * as Yup from 'yup';\n\nexport const initialValues = {\n  registerEmail: '',\n  registerPassword: '',\n  registerRepeatPassword: '',\n};\n\nexport const registerFormSchema = Yup.object().shape({\n  registerEmail: Yup.string().email('Invalid email').required('Please enter your email'),\n  registerPassword: Yup.string()\n    .required('Please enter your password')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/, // eslint-disable-line\n      'Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character'\n    ),\n  registerRepeatPassword: Yup.string()\n    .oneOf([Yup.ref('registerPassword'), null], \"Passwords don't match\")\n    .required('Repeat Password is required'),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Input from 'components/shared/forms/input';\n\nconst RegisterForm = ({ formik }) => (\n  <>\n    <Input\n      name=\"registerEmail\"\n      type=\"text\"\n      value={formik.values.registerEmail}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.registerEmail &&\n        formik.touched?.registerEmail &&\n        formik.errors?.registerEmail\n      }\n      placeholder=\"Insert your e-mail\"\n      label=\"E-mail\"\n      isRequired\n    />\n    <Input\n      name=\"registerPassword\"\n      type=\"password\"\n      value={formik.values.registerPassword}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.registerPassword &&\n        formik.touched?.registerPassword &&\n        formik.errors?.registerPassword\n      }\n      placeholder=\"Insert your password\"\n      label=\"Password\"\n      isRequired\n    />\n    <Input\n      name=\"registerRepeatPassword\"\n      type=\"password\"\n      value={formik.values.registerRepeatPassword}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.registerRepeatPassword &&\n        formik.touched?.registerRepeatPassword &&\n        formik.errors?.registerRepeatPassword\n      }\n      placeholder=\"Please repeat your password\"\n      label=\"Repeat password\"\n      isRequired\n    />\n  </>\n);\n\nexport default RegisterForm;\n\nRegisterForm.propTypes = {\n  formik: PropTypes.shape({\n    values: PropTypes.object,\n    handleChange: PropTypes.func,\n    errors: PropTypes.object,\n    touched: PropTypes.object,\n  }),\n};\n","import * as Yup from 'yup';\n\nexport const initialValues = {\n  loginEmail: '',\n  loginPassword: '',\n};\n\nexport const loginFormSchema = Yup.object().shape({\n  loginEmail: Yup.string()\n    .email('Invalid email')\n    .required('Please enter your email'),\n  loginPassword: Yup.string()\n    .required('Please enter your password')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/, // eslint-disable-line\n      'Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character'\n    ),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Input from 'components/shared/forms/input';\n\nconst LoginForm = ({ formik }) => (\n  <>\n    <Input\n      name=\"loginEmail\"\n      type=\"text\"\n      value={formik.values.loginEmail}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.loginEmail &&\n        formik.touched?.loginEmail &&\n        formik.errors?.loginEmail\n      }\n      placeholder=\"Insert your e-mail\"\n      label=\"E-mail\"\n      isRequired\n    />\n    <Input\n      name=\"loginPassword\"\n      type=\"password\"\n      value={formik.values.loginPassword}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.loginPassword &&\n        formik.touched?.loginPassword &&\n        formik.errors?.loginPassword\n      }\n      placeholder=\"Insert your password\"\n      label=\"Password\"\n      isRequired\n    />\n  </>\n);\n\nexport default LoginForm;\n\nLoginForm.propTypes = {\n  formik: PropTypes.shape({\n    values: PropTypes.object,\n    handleChange: PropTypes.func,\n    errors: PropTypes.object,\n    touched: PropTypes.object,\n  }),\n};\n","export default __webpack_public_path__ + \"static/media/MockupLanding.289495be.png\";","import React, { useState } from 'react';\n\nimport Button from 'components/shared/elements/button';\nimport FormWrapper from 'components/shared/forms/form-wrapper';\n\nimport {\n  initialValues as registerValues,\n  registerFormSchema,\n} from 'components/landing-page/forms/register-form/utils';\nimport RegisterForm from 'components/landing-page/forms/register-form';\nimport {\n  initialValues as loginValues,\n  loginFormSchema,\n} from 'components/landing-page/forms/login-form/utils';\nimport LoginForm from 'components/landing-page/forms/login-form';\n\nimport {\n  landing,\n  circle,\n  buttons,\n  landingInfo,\n  landingImage,\n} from './landing.module.scss';\n\nimport MockupLanding from 'assets/images/MockupLanding.png';\n\nconst Experience = () => {\n  const [loginOpen, setLoginOpen] = useState(false);\n  const [registerOpen, setRegisterOpen] = useState(false);\n\n  const handleButton = (isRegister) => {\n    setLoginOpen(!isRegister);\n    setRegisterOpen(isRegister);\n  };\n\n  const footerContent = (isRegister) =>\n    isRegister ? (\n      <>\n        Already have an account?{' '}\n        <Button\n          text=\"Log in\"\n          type=\"button\"\n          handle={() => handleButton(false)}\n        />\n      </>\n    ) : (\n      <>\n        Don’t have and account?{' '}\n        <Button\n          text=\"Sign up\"\n          type=\"button\"\n          handle={() => handleButton(true)}\n        />\n      </>\n    );\n\n  const modal = (isRegister) => (\n    <FormWrapper\n      initialValues={isRegister ? registerValues : loginValues}\n      schema={isRegister ? registerFormSchema : loginFormSchema}\n      title={isRegister ? 'Add experience' : 'Add experience'}\n      handleClose={() =>\n        isRegister ? setRegisterOpen(false) : setLoginOpen(false)\n      }\n      footerContent={footerContent(isRegister)}\n    >\n      {(formik) =>\n        isRegister ? (\n          <RegisterForm formik={formik} />\n        ) : (\n          <LoginForm formik={formik} />\n        )\n      }\n    </FormWrapper>\n  );\n\n  return (\n    <section className={landing}>\n      {loginOpen ? modal(false) : null}\n      {registerOpen ? modal(true) : null}\n      <div className={circle}></div>\n      <div className={landingInfo}>\n        <h1>\n          Editable\n          <br />\n          Portfolio\n        </h1>\n        <h3>\n          The platform that makes it easy to create your personal portfolio site\n          in just a few minutes. Create yours <span>now</span>!\n        </h3>\n        <div className={buttons}>\n          <Button\n            text=\"Register\"\n            color=\"green\"\n            handle={() => handleButton(true)}\n          />\n          <Button\n            text=\"Login\"\n            color=\"green\"\n            handle={() => handleButton(false)}\n          />\n        </div>\n      </div>\n      <img src={MockupLanding} alt=\"Mockup\" className={landingImage} />\n    </section>\n  );\n};\n\nexport default Experience;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\n\nimport Home from './pages/home';\nimport Projects from './pages/projects/projects-list';\nimport Project from './pages/projects/project';\nimport Experience from './pages/experience';\nimport Landing from './pages/landing';\n\nimport UserContext from 'context/userContext';\n\nimport './styles/global.scss';\n\nfunction App() {\n  return (\n    <UserContext>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Editable Portfolio</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      </Helmet>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<Landing />} />\n          <Route path=\"/home\" element={<Home />} />\n          <Route path=\"/projects\" element={<Projects />} />\n          <Route path=\"/projects/:projectId\" element={<Project />} />\n          <Route path=\"/experience\" element={<Experience />} />\n        </Routes>\n      </BrowserRouter>\n    </UserContext>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__143Iq\",\"icon\":\"button_icon__1PWN2\",\"borderless\":\"button_borderless__2i_W_\",\"green\":\"button_green__3og7F\",\"white\":\"button_white__3XJod\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"landing\":\"landing_landing__fdgkz\",\"circle\":\"landing_circle__eYX2k\",\"landingInfo\":\"landing_landingInfo__90BfO\",\"landingImage\":\"landing_landingImage__2bQsu\",\"buttons\":\"landing_buttons__3KNd3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__pAAvU\",\"pageInfo\":\"header_pageInfo__17fDH\",\"headerTransparent\":\"header_headerTransparent__E4xBS\",\"hideTitle\":\"header_hideTitle__3HWNX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"home_contentContainer__2yUYu\",\"about\":\"home_about__1qtvq\",\"footer\":\"home_footer__2OuOp\",\"imageGroup\":\"home_imageGroup__1qnJC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"input_input__2jmj8\",\"red\":\"input_red__3xfOO\",\"errorMessage\":\"input_errorMessage__rkMhB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"textarea_textarea__1Nv1H\",\"red\":\"textarea_red__324FM\",\"errorMessage\":\"textarea_errorMessage__nNFwp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"list-element_wrapper__3letE\",\"controls\":\"list-element_controls__pyuI9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"navigation_nav__1Tr3w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"info-element_wrapper__R1pZg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"form-title_title__3-kyq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"project-card_card__3UbFt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"files-input_input__fnHBy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"projects-list_contentContainer__3BvEX\"};"],"sourceRoot":""}
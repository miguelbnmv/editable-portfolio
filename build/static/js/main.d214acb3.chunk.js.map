{"version":3,"sources":["components/projects/project-card/project-card.module.scss","components/shared/forms/files-input/files-input.module.scss","components/shared/modal/modal.module.scss","pages/projects/project/project.module.scss","assets/icons/Github.svg","assets/icons/Instagram.svg","assets/icons/Twitter.svg","assets/images/Kelvin.png","context/userContext.js","assets/icons/left.svg","assets/icons/right.svg","assets/icons/close.svg","assets/icons/projects.svg","assets/icons/experience.svg","assets/icons/home.svg","components/shared/elements/button/Button.js","components/shared/header/Header.js","components/shared/navigation/Navigation.js","components/shared/layout/Layout.js","components/shared/modal/Modal.js","components/shared/forms/form-wrapper/FormWrapper.js","components/home/info-element/InfoElement.js","assets/icons/required.svg","assets/icons/requiredError.svg","components/shared/forms/input/Input.js","components/shared/forms/textarea/Textarea.js","components/home/forms/contact-form/ContactForm.js","components/home/forms/contact-form/utils.js","components/shared/forms/form-title/FormTitle.js","components/home/forms/edit-info-form/EditInfoForm.js","components/home/forms/edit-info-form/utils.js","pages/home/Home.js","components/projects/project-card/ProjectCard.js","components/projects/project-image/ProjectImage.js","components/shared/forms/files-input/FilesInput.js","components/projects/forms/add-project-form/AddProjectForm.js","components/projects/forms/add-project-form/utils.js","components/shared/forms/list-element/ListElement.js","components/projects/forms/my-projects-form/MyProjectsForm.js","pages/projects/projects-list/ProjectsList.js","pages/projects/project/Project.js","components/experience/forms/add-experience-form/AddExperienceForm.js","components/experience/forms/add-experience-form/utils.js","components/experience/forms/my-experience-form/MyExperienceForm.js","components/experience/carousel/Carousel.js","pages/experience/Experience.js","assets/images/MockupLanding.png","components/landing-page/forms/register-form/utils.js","components/landing-page/forms/register-form/RegisterForm.js","components/landing-page/forms/login-form/utils.js","components/landing-page/forms/login-form/LoginForm.js","pages/landing/Landing.js","App.js","index.js","pages/experience/experience.module.scss","components/shared/elements/button/button.module.scss","pages/projects/projects-list/projects-list.module.scss","components/experience/carousel/carousel.module.scss","pages/landing/landing.module.scss","components/shared/header/header.module.scss","pages/home/home.module.scss","components/shared/forms/input/input.module.scss","components/shared/forms/textarea/textarea.module.scss","components/shared/forms/list-element/list-element.module.scss","components/shared/navigation/navigation.module.scss","components/home/info-element/info-element.module.scss","components/shared/forms/form-title/form-title.module.scss"],"names":["module","exports","Context","createContext","UserContext","children","Provider","value","Data","classes","green","red","white","borderless","icon","icons","left","leftIcon","right","rightIcon","close","closeIcon","projects","projectsIcon","experience","experienceIcon","home","homeIcon","Button","color","handle","img","text","type","disabled","className","button","onClick","src","alt","width","navigation","Home","Projects","Experience","Header","pageTitle","noFill","hide","openModal","navigate","useNavigate","getTitle","index","getPath","header","headerTransparent","hideTitle","pageInfo","Navigation","nav","Layout","Modal","title","handleButton","handleClose","footerContent","isSubmitting","useState","isMaxHeight","setIsMaxHeight","useEffect","contentHeight","document","getElementById","offsetHeight","background","id","content","footer","style","boxShadow","link","FormWrapper","initialValues","schema","validationSchema","onSubmit","formik","handleSubmit","isSubmit","InfoElement","label","wrapper","Input","isRequired","name","placeholder","handleChange","error","input","htmlFor","requiredError","required","onChange","errorMessage","Textarea","textarea","ContactForm","values","contactName","errors","touched","contactEmail","contactMessage","contactFormSchema","Yup","shape","email","FormTitle","isList","marginBottom","EditInfoForm","userName","userBio","double","userRole","userLocation","userEmail","userPhone","userBehance","userGitHub","userLinkedIn","userInstagram","userTwitter","userDribble","user","bio","role","location","phone","social","behance","Github","Linkedin","Instagram","Twitter","Dribble","editInfoFormSchema","GithubIcon","InstagramIcon","TwitterIcon","contactOpen","setContactOpen","editInfoOpen","setEditInfoOpen","info","useContext","angle","useMightyMouse","x","window","innerWidth","y","innerHeight","selectedElement","position","rotateWrapper","rotateImage","modal","isContact","contactFormValues","editInfoFormValues","contentContainer","about","split","Object","entries","map","href","imageGroup","transform","Kelvin","ProjectCard","project","setActiveIndex","mode","speed","card","onMouseEnter","onMouseLeave","ProjectImage","url","active","dimensions","setDimensions","node","setNode","ref","useCallback","useLayoutEffect","rect","getBoundingClientRect","height","getDimensionObject","useSize","isActive","FilesInput","AddProjectForm","projectTitle","projectQuote","projectFirstDescriptionTitle","projectFirstDescription","projectSecondDescriptionTitle","projectSecondDescription","projectSubject","projectDate","projectPlatforms","projectTechnologies","quote","primaryDescription","description","secondaryDescription","subject","year","platforms","technologies","projectImages","addProjectFormSchema","ListElement","editHandle","controls","MyProjectsForm","ProjectsList","mousePosition","setMousePosition","updateMousePosition","event","clientX","clientY","addEventListener","removeEventListener","useMousePosition","useSearchParams","searchParams","activeIndex","addProjectOpen","setAddProjectOpen","myProjectsOpen","setMyProjectsOpen","find","parseInt","get","projectName","projectBanner","banner","xPos","yPos","Project","editProject","setEditProject","projectId","useParams","hero","main","primaryBio","image","secondaryBio","breakpointCols","default","masonry","columnClassName","masonryColumn","gallery","AddExperienceForm","experienceTitle","experienceDate","date","experienceImages","images","addExperienceFormSchema","MyExperienceForm","experiences","currentYear","addTitle","Date","getFullYear","Fragment","Carousel","forwardRef","options","years","sliderRef","useRef","refEl","setYear","useImperativeHandle","current","slider","Glide","on","length","mount","destroy","replace","reload","Helmet","timeline","slides","line","yearText","Slide","month","allMonths","addExperienceOpen","setAddExperienceOpen","myExperienceOpen","setMyExperienceOpen","months","useMemo","currentDate","includes","push","getMonth","perView","focusAt","startAt","gap","m","i","hasExperience","monthWrapper","ball","experiencePop","innerPop","experienceInfo","registerEmail","registerPassword","registerRepeatPassword","registerFormSchema","matches","oneOf","RegisterForm","loginEmail","loginPassword","loginFormSchema","LoginForm","Landing","loginOpen","setLoginOpen","registerOpen","setRegisterOpen","isRegister","registerValues","loginValues","landing","circle","landingInfo","buttons","MockupLanding","landingImage","App","charSet","path","element","ReactDOM","render"],"mappings":"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","file":"static/js/main.d214acb3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"project-card_card__3UbFt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"files-input_input__fnHBy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"modal_background__35bdD\",\"header\":\"modal_header__3hSgT\",\"content\":\"modal_content__1KJrv\",\"double\":\"modal_double__2q9VD\",\"footer\":\"modal_footer__2VzJE\",\"link\":\"modal_link__S1uAq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"project_contentContainer__1vDqq\",\"hero\":\"project_hero__2JRqk\",\"main\":\"project_main__1F5LS\",\"primaryBio\":\"project_primaryBio__2w5ar\",\"about\":\"project_about__uo5r9\",\"secondaryBio\":\"project_secondaryBio__3wix7\",\"masonry\":\"project_masonry__3MbIp\",\"masonryColumn\":\"project_masonryColumn__3RtRp\"};","export default __webpack_public_path__ + \"static/media/Github.6ab8e150.svg\";","export default __webpack_public_path__ + \"static/media/Instagram.91878c29.svg\";","export default __webpack_public_path__ + \"static/media/Twitter.a26273c5.svg\";","export default __webpack_public_path__ + \"static/media/Kelvin.e9ddc21e.png\";","import { createContext } from 'react';\n\nimport Data from 'assets/json/user.json';\n\nexport const Context = createContext({});\n\nconst UserContext = ({ children }) => (\n  <Context.Provider value={Data}>{children}</Context.Provider>\n);\n\nexport default UserContext;\n","export default __webpack_public_path__ + \"static/media/left.a1b2792c.svg\";","export default __webpack_public_path__ + \"static/media/right.8223bba0.svg\";","export default __webpack_public_path__ + \"static/media/close.86beb770.svg\";","export default __webpack_public_path__ + \"static/media/projects.a77d10f1.svg\";","export default __webpack_public_path__ + \"static/media/experience.409a86c9.svg\";","export default __webpack_public_path__ + \"static/media/home.4d386f8d.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport leftIcon from 'assets/icons/left.svg';\nimport rightIcon from 'assets/icons/right.svg';\nimport closeIcon from 'assets/icons/close.svg';\nimport projectsIcon from 'assets/icons/projects.svg';\nimport experienceIcon from 'assets/icons/experience.svg';\nimport homeIcon from 'assets/icons/home.svg';\n\nimport {\n  button,\n  green,\n  red,\n  white,\n  borderless,\n  icon,\n} from './button.module.scss';\n\nvar classes = {\n  green: green,\n  red: red,\n  white: white,\n  borderless: borderless,\n  icon: icon,\n};\n\nvar icons = {\n  left: leftIcon,\n  right: rightIcon,\n  close: closeIcon,\n  projects: projectsIcon,\n  experience: experienceIcon,\n  home: homeIcon,\n};\n\nconst Button = ({ color, handle, img, text, type = 'button', disabled }) => {\n  return (\n    <button\n      type={type}\n      className={`${button} ${color ? classes[color] : ''}`}\n      onClick={handle}\n      disabled={disabled}\n    >\n      {img ? <img src={icons[img]} alt={img} width={28} /> : ''}\n      <span>{text}</span>\n    </button>\n  );\n};\n\nButton.propTypes = {\n  color: PropTypes.string,\n  handle: PropTypes.func,\n  img: PropTypes.string,\n  text: PropTypes.string,\n  type: PropTypes.string,\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\n\nimport Button from '../elements/button/Button';\n\nimport {\n  header,\n  headerTransparent,\n  hideTitle,\n  pageInfo,\n} from './header.module.scss';\n\nconst navigation = {\n  Home: ['experience', 'projects'],\n  Projects: ['home', 'experience'],\n  Experience: ['projects', 'home'],\n};\n\nconst Header = ({ pageTitle, noFill, hide, openModal }) => {\n  const navigate = useNavigate();\n\n  const getTitle = (index) => {\n    if (noFill) return 'Projects';\n    return navigation[pageTitle] ? navigation[pageTitle][index] : pageTitle;\n  };\n\n  const getPath = (index) => {\n    if (noFill) return '/projects';\n    return '/' + navigation[pageTitle][index];\n  };\n\n  return (\n    <header\n      className={`${header} ${\n        noFill ? headerTransparent : hide ? hideTitle : null\n      }`}\n    >\n      <nav>\n        <Button\n          handle={() => navigate(getPath(0))}\n          text={getTitle(0)}\n          img=\"left\"\n          color=\"borderless\"\n        />\n        {!noFill ? (\n          <Button\n            handle={() => navigate(getPath(1))}\n            text={getTitle(1)}\n            img=\"right\"\n            color=\"borderless\"\n          />\n        ) : null}\n      </nav>\n      <div className={pageInfo}>\n        {!hide ? (\n          <h1>\n            {pageTitle}\n            <span>.</span>\n          </h1>\n        ) : null}\n        <Button handle={openModal} text=\"Edit\" color=\"white\" />\n      </div>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  pageTitle: PropTypes.string,\n  noFill: PropTypes.bool,\n  hide: PropTypes.bool,\n  openModal: PropTypes.func,\n};\n\nexport default Header;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport Button from '../elements/button/Button';\n\nimport { nav } from './navigation.module.scss';\n\nconst Navigation = () => {\n  const navigate = useNavigate();\n\n  return (\n    <nav className={nav}>\n      <Button handle={() => navigate('/home')} img=\"home\" color=\"icon\" />\n      <Button\n        handle={() => navigate('/projects')}\n        img=\"projects\"\n        color=\"icon\"\n      />\n      <Button\n        handle={() => navigate('/experience')}\n        img=\"experience\"\n        color=\"icon\"\n      />\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Header from '../header';\nimport Navigation from '../navigation';\n\nconst Layout = ({ pageTitle, noFill, hide, children, openModal }) => (\n  <>\n    <Header\n      pageTitle={pageTitle}\n      noFill={noFill}\n      hide={hide}\n      openModal={openModal}\n    />\n    {children}\n    <Navigation />\n  </>\n);\n\nexport default Layout;\n\nLayout.propTypes = {\n  pageTitle: PropTypes.string,\n  noFill: PropTypes.bool,\n  hide: PropTypes.bool,\n  children: PropTypes.node,\n  openModal: PropTypes.func,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'components/shared/elements/button';\n\nimport { background, header, content, footer, link } from './modal.module.scss';\n\nconst Modal = ({\n  children,\n  title,\n  handleButton,\n  handleClose,\n  footerContent,\n  isSubmitting,\n}) => {\n  const [isMaxHeight, setIsMaxHeight] = useState(false);\n\n  useEffect(() => {\n    const contentHeight = document.getElementById('content')?.offsetHeight;\n    contentHeight >= 528 ? setIsMaxHeight(true) : setIsMaxHeight(false);\n  }, []);\n\n  return (\n    <div className={background}>\n      <aside>\n        <div className={header}>\n          <h3>{title}</h3>\n          <Button handle={handleClose} img=\"close\" color=\"icon\" />\n        </div>\n        <div id=\"content\" className={content}>\n          {children}\n        </div>\n        <div\n          className={footer}\n          style={{\n            boxShadow: isMaxHeight\n              ? '0 -0.25rem 2.5rem 0.5rem rgba(0, 0, 0, 0.25)'\n              : null,\n          }}\n        >\n          <Button\n            type={!handleButton ? 'submit' : 'button'}\n            handle={handleButton ? handleButton : null}\n            color={!handleButton ? 'green' : 'white'}\n            text={!handleButton ? 'Submit' : 'Add'}\n            disabled={isSubmitting}\n          />\n          {footerContent ? <span className={link}>{footerContent}</span> : null}\n        </div>\n      </aside>\n    </div>\n  );\n};\n\nexport default Modal;\n\nModal.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n  isSubmit: PropTypes.bool,\n  onChange: PropTypes.func,\n  footerContent: PropTypes.node,\n  initialValues: PropTypes.object,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\n\nimport Modal from 'components/shared/modal';\n\nconst FormWrapper = ({ children, initialValues, schema, title, handleClose, footerContent }) => (\n  <>\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={() => {}}\n    >\n      {(formik) => (\n        <form onSubmit={formik.handleSubmit}>\n          <Modal\n            title={title}\n            isSubmitting={formik.isSubmitting}\n            handleClose={handleClose}\n            isSubmit\n            footerContent={footerContent}\n          >\n            {children(formik)}\n          </Modal>\n        </form>\n      )}\n    </Formik>\n  </>\n);\n\nexport default FormWrapper;\n\nFormWrapper.propTypes = {\n  children: PropTypes.func.isRequired,\n  initialValues: PropTypes.object.isRequired,\n  schema: PropTypes.object.isRequired,\n  title: PropTypes.string.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  footerContent: PropTypes.node,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { wrapper } from './info-element.module.scss';\n\nconst InfoElement = ({ label, content }) => (\n  <div className={wrapper}>\n    <span>{label}</span>\n    <span>{content}</span>\n  </div>\n);\n\nexport default InfoElement;\n\nInfoElement.propTypes = {\n  label: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n};\n","export default __webpack_public_path__ + \"static/media/required.375a3625.svg\";","export default __webpack_public_path__ + \"static/media/requiredError.8fd41a1a.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport required from 'assets/icons/required.svg';\nimport requiredError from 'assets/icons/requiredError.svg';\n\nimport { input, red, errorMessage } from './input.module.scss';\n\nconst Input = ({\n  label,\n  isRequired,\n  name,\n  type,\n  placeholder,\n  value,\n  handleChange,\n  error,\n}) => (\n  <div className={input}>\n    <div>\n      <label htmlFor={name}>{label}</label>\n      {isRequired ? (\n        <img src={error ? requiredError : required} alt=\"Required Icon\" />\n      ) : null}\n    </div>\n    <input\n      id={name}\n      type={type}\n      value={value}\n      onChange={handleChange}\n      placeholder={placeholder}\n      className={error ? red : null}\n    />\n    <span className={errorMessage}>{error}</span>\n  </div>\n);\n\nexport default Input;\n\nInput.propTypes = {\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport required from 'assets/icons/required.svg';\nimport requiredError from 'assets/icons/requiredError.svg';\n\nimport { textarea, red, errorMessage } from './textarea.module.scss';\n\nconst Textarea = ({\n  label,\n  isRequired,\n  name,\n  placeholder,\n  value,\n  handleChange,\n  error,\n}) => (\n  <div className={textarea}>\n    <div>\n      <label htmlFor={name}>{label}</label>\n      {isRequired ? (\n        <img src={error ? requiredError : required} alt=\"Required Icon\" />\n      ) : null}\n    </div>\n    <textarea\n      id={name}\n      placeholder={placeholder}\n      value={value}\n      onChange={handleChange}\n      className={error ? red : null}\n    />\n    <span className={errorMessage}>{error}</span>\n  </div>\n);\n\nexport default Textarea;\n\nTextarea.propTypes = {\n  label: PropTypes.string,\n  isRequired: PropTypes.bool,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Input from 'components/shared/forms/input';\nimport Textarea from 'components/shared/forms/textarea';\n\nconst ContactForm = ({ formik }) => (\n  <>\n    <Input\n      name=\"contactName\"\n      type=\"text\"\n      value={formik.values.contactName}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.contactName &&\n        formik.touched?.contactName &&\n        formik.errors?.contactName\n      }\n      placeholder=\"Insert your name\"\n      label=\"Name\"\n      isRequired\n    />\n    {}\n    <Input\n      name=\"contactEmail\"\n      type=\"text\"\n      value={formik.values.contactEmail}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.contactEmail &&\n        formik.touched?.contactEmail &&\n        formik.errors?.contactEmail\n      }\n      placeholder=\"Insert your e-mail\"\n      label=\"E-mail\"\n      isRequired\n    />\n    <Textarea\n      name=\"contactMessage\"\n      value={formik.values.contactMessage}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.contactMessage &&\n        formik.touched?.contactMessage &&\n        formik.errors?.contactMessage\n      }\n      placeholder=\"Tell me what you need\"\n      label=\"Message\"\n      isRequired\n    />\n  </>\n);\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  formik: PropTypes.shape({\n    values: PropTypes.object,\n    handleChange: PropTypes.func,\n    errors: PropTypes.object,\n    touched: PropTypes.object,\n  }),\n};\n","import * as Yup from 'yup';\n\nexport const initialValues = {\n  contactName: '',\n  contactEmail: '',\n  contactMessage: '',\n};\n\nexport const contactFormSchema = Yup.object().shape({\n  contactName: Yup.string().required('Required'),\n  contactEmail: Yup.string().email('Invalid email').required('Required'),\n  contactMessage: Yup.string().required('Required'),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { title } from './form-title.module.scss';\n\nconst FormTitle = ({ text, isList }) => (\n  <h3 className={title} style={{ marginBottom: isList ? '2rem' : '0.5rem' }}>\n    {text}\n  </h3>\n);\n\nexport default FormTitle;\n\nFormTitle.propTypes = {\n  text: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Input from 'components/shared/forms/input';\nimport Textarea from 'components/shared/forms/textarea';\nimport FormTitle from 'components/shared/forms/form-title';\n\nimport { double } from 'components/shared/modal/modal.module.scss';\n\nconst EditInfoForm = ({ formik }) => (\n  <>\n    <FormTitle text=\"about\" />\n    <Input\n      name=\"userName\"\n      type=\"text\"\n      value={formik.values.userName}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.userName &&\n        formik.touched?.userName &&\n        formik.errors?.userName\n      }\n      placeholder=\"Insert your name\"\n      label=\"Name\"\n      isRequired\n    />\n    <Textarea\n      name=\"userBio\"\n      value={formik.values.userBio}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.userBio &&\n        formik.touched?.userBio &&\n        formik.errors?.userBio\n      }\n      placeholder=\"Give a description of yourself\"\n      label=\"Bio\"\n      isRequired\n    />\n    <div className={double}>\n      <Input\n        name=\"userRole\"\n        type=\"text\"\n        value={formik.values.userRole}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.userRole &&\n          formik.touched?.userRole &&\n          formik.errors?.userRole\n        }\n        placeholder=\"Insert your job role\"\n        label=\"Role\"\n        isRequired\n      />\n      <Input\n        name=\"userLocation\"\n        type=\"text\"\n        value={formik.values.userLocation}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.userLocation &&\n          formik.touched?.userLocation &&\n          formik.errors?.userLocation\n        }\n        placeholder=\"Insert your current location\"\n        label=\"Location\"\n      />\n    </div>\n    <div className={double}>\n      <Input\n        name=\"userEmail\"\n        type=\"text\"\n        value={formik.values.userEmail}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.userEmail &&\n          formik.touched?.userEmail &&\n          formik.errors?.userEmail\n        }\n        placeholder=\"Insert your e-mail\"\n        label=\"E-mail\"\n      />\n      <Input\n        name=\"userPhone\"\n        type=\"tel\"\n        value={formik.values.userPhone}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.userPhone &&\n          formik.touched?.userPhone &&\n          formik.errors?.userPhone\n        }\n        placeholder=\"Insert your phone number\"\n        label=\"Phone\"\n      />\n    </div>\n    <FormTitle text=\"social\" />\n    <div className={double}>\n      <Input\n        name=\"userBehance\"\n        type=\"text\"\n        value={formik.values.userBehance}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.userBehance &&\n          formik.touched?.userBehance &&\n          formik.errors?.userBehance\n        }\n        placeholder=\"Insert your behance account\"\n        label=\"Behance\"\n      />\n      <Input\n        name=\"userGitHub\"\n        type=\"text\"\n        value={formik.values.userGitHub}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.userGitHub &&\n          formik.touched?.userGitHub &&\n          formik.errors?.userGitHub\n        }\n        placeholder=\"Insert your gitHub account\"\n        label=\"GitHub\"\n      />\n    </div>\n    <div className={double}>\n      <Input\n        name=\"userLinkedIn\"\n        type=\"text\"\n        value={formik.values.userLinkedIn}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.userLinkedIn &&\n          formik.touched?.userLinkedIn &&\n          formik.errors?.userLinkedIn\n        }\n        placeholder=\"Insert your linkedIn account\"\n        label=\"LinkedIn\"\n      />\n      <Input\n        name=\"userInstagram\"\n        type=\"text\"\n        value={formik.values.userInstagram}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.userInstagram &&\n          formik.touched?.userInstagram &&\n          formik.errors?.userInstagram\n        }\n        placeholder=\"Insert your instagram account\"\n        label=\"Instagram\"\n      />\n    </div>\n    <div className={double}>\n      <Input\n        name=\"userTwitter\"\n        type=\"text\"\n        value={formik.values.userTwitter}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.userTwitter &&\n          formik.touched?.userTwitter &&\n          formik.errors?.userTwitter\n        }\n        placeholder=\"Insert twitter account\"\n        label=\"Twitter\"\n      />\n      <Input\n        name=\"userDribble\"\n        type=\"text\"\n        value={formik.values.userDribble}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.userDribble &&\n          formik.touched?.userDribble &&\n          formik.errors?.userDribble\n        }\n        placeholder=\"Insert your dribble account\"\n        label=\"Dribble\"\n      />\n    </div>\n  </>\n);\n\nexport default EditInfoForm;\n\nEditInfoForm.propTypes = {\n  formik: PropTypes.shape({\n    values: PropTypes.object,\n    handleChange: PropTypes.func,\n    errors: PropTypes.object,\n    touched: PropTypes.object,\n  }),\n};\n","import * as Yup from 'yup';\n\nexport const initialValues = (user) => ({\n  userName: user?.name ?? '',\n  userBio: user?.bio ?? '',\n  userRole: user?.role ?? '',\n  userLocation: user?.location ?? '',\n  userEmail: user?.email ?? '',\n  userPhone: user?.phone ?? '',\n  userBehance: user?.social?.behance ?? '',\n  userGitHub: user?.social?.Github ?? '',\n  userLinkedIn: user?.social?.Linkedin ?? '',\n  userInstagram: user?.social?.Instagram ?? '',\n  userTwitter: user?.social?.Twitter ?? '',\n  userDribble: user?.social?.Dribble ?? '',\n});\n\nexport const editInfoFormSchema = Yup.object().shape({\n  userName: Yup.string().required('Required'),\n  userBio: Yup.string().required('Required'),\n  userRole: Yup.string().required('Required'),\n  userEmail: Yup.string().email('Invalid email'),\n});\n","import React, { useState, useContext } from 'react';\nimport useMightyMouse from 'react-hook-mighty-mouse';\n\nimport GithubIcon from 'assets/icons/Github.svg';\nimport InstagramIcon from 'assets/icons/Instagram.svg';\nimport TwitterIcon from 'assets/icons/Twitter.svg';\nimport Kelvin from 'assets/images/Kelvin.png';\n\nimport { Context } from 'context/userContext';\n\nimport Layout from 'components/shared/layout';\nimport Button from 'components/shared/elements/button';\nimport FormWrapper from 'components/shared/forms/form-wrapper';\nimport InfoElement from 'components/home/info-element';\n\nimport ContactForm from 'components/home/forms/contact-form';\nimport {\n  initialValues as contactFormValues,\n  contactFormSchema,\n} from 'components/home/forms/contact-form/utils';\nimport EditInfoForm from 'components/home/forms/edit-info-form';\nimport {\n  initialValues as editInfoFormValues,\n  editInfoFormSchema,\n} from 'components/home/forms/edit-info-form/utils';\n\nimport {\n  contentContainer,\n  about,\n  footer,\n  imageGroup,\n} from './home.module.scss';\n\nconst icons = {\n  Github: GithubIcon,\n  Instagram: InstagramIcon,\n  Twitter: TwitterIcon,\n};\n\nconst Home = () => {\n  const [contactOpen, setContactOpen] = useState(false);\n  const [editInfoOpen, setEditInfoOpen] = useState(false);\n  const { info } = useContext(Context);\n\n  const {\n    selectedElement: {\n      position: { angle },\n    },\n  } = useMightyMouse(true, 'placeholder', {\n    x: -window.innerWidth / 3,\n    y: -window.innerHeight / 3,\n  });\n\n  const rotateWrapper = `rotate(${angle}deg)`;\n  const rotateImage = `rotate(${-angle}deg)`;\n\n  const modal = (isContact) => (\n    <FormWrapper\n      initialValues={isContact ? contactFormValues : editInfoFormValues(info)}\n      schema={isContact ? contactFormSchema : editInfoFormSchema}\n      title={isContact ? 'Contact Me' : 'Edit your info'}\n      handleClose={() =>\n        isContact ? setContactOpen(false) : setEditInfoOpen(false)\n      }\n    >\n      {(formik) =>\n        isContact ? (\n          <ContactForm formik={formik} />\n        ) : (\n          <EditInfoForm formik={formik} />\n        )\n      }\n    </FormWrapper>\n  );\n\n  return (\n    <Layout pageTitle=\"Home\" hide openModal={() => setEditInfoOpen(true)}>\n      {contactOpen ? modal(true) : null}\n      {editInfoOpen ? modal(false) : null}\n      <section className={contentContainer}>\n        <div className={about}>\n          <h1>\n            Hello, I'm <span>{info?.name.split(' ')[0]}</span>\n          </h1>\n          <h3>{info?.role}</h3>\n          <p>{info?.bio}</p>\n          <Button\n            handle={() => setContactOpen(true)}\n            text=\"Contact\"\n            img=\"right\"\n            color=\"green\"\n          />\n          <div>\n            {Object.entries(info?.social).map((x) => {\n              if (x[1] !== '') {\n                return (\n                  <a href={x[1]} key={x[0]}>\n                    <img src={icons[x[0]]} alt={x[0] + ' Icon'} />\n                  </a>\n                );\n              } else {\n                return null;\n              }\n            })}\n          </div>\n          <div className={footer}>\n            <InfoElement label=\"E-mail\" content={info?.email} />\n            <InfoElement label=\"Phone\" content={info?.phone} />\n            <InfoElement label=\"Location\" content={info?.location} />\n          </div>\n        </div>\n        <div\n          id=\"placeholder\"\n          className={imageGroup}\n          style={{ transform: rotateWrapper }}\n        >\n          <img src={Kelvin} alt=\"User\" style={{ transform: rotateImage }} />\n        </div>\n      </section>\n    </Layout>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Ticker from 'react-ticker';\nimport { useNavigate } from 'react-router-dom';\n\nimport Button from 'components/shared/elements/button';\n\nimport { card } from './project-card.module.scss';\n\nconst ProjectCard = ({ project, setActiveIndex, index }) => {\n  const navigate = useNavigate();\n\n  return (\n    <Ticker mode=\"chain\" speed={2}>\n      {() => (\n        <div\n          className={card}\n          key={project.id}\n          onMouseEnter={() => setActiveIndex(index)}\n          onMouseLeave={() => setActiveIndex(-1)}\n        >\n          <Button\n            text={' ' + project.name + '.'}\n            handle={() => navigate(`/projects/${project.id}`)}\n          />\n        </div>\n      )}\n    </Ticker>\n  );\n};\n\nexport default ProjectCard;\n\nProjectCard.propTypes = {\n  project: PropTypes.object.isRequired,\n  setActiveIndex: PropTypes.func,\n  index: PropTypes.number,\n};\n","import React, { useCallback, useLayoutEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { isActive } from 'pages/projects/projects-list/projects-list.module.scss';\n\nconst getDimensionObject = (node) => {\n  const rect = node.getBoundingClientRect();\n\n  return {\n    width: rect.width,\n    height: rect.height,\n  };\n};\n\nconst useSize = () => {\n  const [dimensions, setDimensions] = useState({});\n  const [node, setNode] = useState(null);\n\n  const ref = useCallback((node) => {\n    setNode(node);\n  }, []);\n\n  useLayoutEffect(() => {\n    if (node) {\n      const measure = () => setDimensions(getDimensionObject(node));\n      measure();\n    }\n  }, [node]);\n\n  return [ref, dimensions];\n};\n\nconst ProjectImage = ({ url, active, x, y }) => {\n  const [ref, { width, height }] = useSize();\n\n  return (\n    <img\n      className={active ? isActive : null}\n      ref={ref}\n      src={url}\n      alt=\"project banner\"\n      style={{\n        transform: `translate(${x - width / 2}px, ${y - height / 2}px)`,\n      }}\n    />\n  );\n};\n\nexport default ProjectImage;\n\nProjectImage.propTypes = {\n  url: PropTypes.string.isRequired,\n  active: PropTypes.bool,\n  x: PropTypes.number,\n  y: PropTypes.number,\n};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { input } from './files-input.module.scss';\n\nconst FilesInput = ({ label, name }) => {\n  return (\n    <div className={input}>\n      <label htmlFor={name}>\n        <div>{label}</div>\n      </label>\n      <input id={name} type=\"file\" />\n    </div>\n  );\n};\n\nexport default FilesInput;\n\nFilesInput.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Input from 'components/shared/forms/input';\nimport Textarea from 'components/shared/forms/textarea';\nimport FilesInput from 'components/shared/forms/files-input';\nimport FormTitle from 'components/shared/forms/form-title';\n\nimport { double } from 'components/shared/modal/modal.module.scss';\n\nconst AddProjectForm = ({ formik }) => (\n  <>\n    <FormTitle text=\"general\" />\n    <Input\n      name=\"projectTitle\"\n      type=\"text\"\n      value={formik.values.projectTitle}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.projectTitle &&\n        formik.touched?.projectTitle &&\n        formik.errors?.projectTitle\n      }\n      placeholder=\"Insert the title of your project\"\n      label=\"Title\"\n      isRequired\n    />\n    <Input\n      name=\"projectQuote\"\n      type=\"text\"\n      value={formik.values.projectQuote}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.projectQuote &&\n        formik.touched?.projectQuote &&\n        formik.errors?.projectQuote\n      }\n      placeholder=\"Insert the quote of your project\"\n      label=\"Quote\"\n      isRequired\n    />\n    <FormTitle text=\"first description\" />\n    <Input\n      name=\"projectFirstDescriptionTitle\"\n      type=\"text\"\n      value={formik.values.projectFirstDescriptionTitle}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.projectFirstDescriptionTitle &&\n        formik.touched?.projectFirstDescriptionTitle &&\n        formik.errors?.projectFirstDescriptionTitle\n      }\n      placeholder=\"Insert the title of the first description\"\n      label=\"Title\"\n      isRequired\n    />\n    <Textarea\n      name=\"projectFirstDescription\"\n      value={formik.values.projectFirstDescription}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.projectFirstDescription &&\n        formik.touched?.projectFirstDescription &&\n        formik.errors?.projectFirstDescription\n      }\n      placeholder=\"Give an initial description of your project\"\n      label=\"Description\"\n      isRequired\n    />\n    <FormTitle text=\"second description\" />\n    <Input\n      name=\"projectSecondDescriptionTitle\"\n      type=\"text\"\n      value={formik.values.projectSecondDescriptionTitle}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.projectSecondDescriptionTitle &&\n        formik.touched?.projectSecondDescriptionTitle &&\n        formik.errors?.projectSecondDescriptionTitle\n      }\n      placeholder=\"Insert the title of the second description\"\n      label=\"Title\"\n      isRequired\n    />\n    <Textarea\n      name=\"projectSecondDescription\"\n      value={formik.values.projectSecondDescription}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.projectSecondDescription &&\n        formik.touched?.projectSecondDescription &&\n        formik.errors?.projectSecondDescription\n      }\n      placeholder=\"Give a final description of your project\"\n      label=\"Description\"\n      isRequired\n    />\n    <FormTitle text=\"about\" />\n    <div className={double}>\n      <Input\n        name=\"projectSubject\"\n        type=\"text\"\n        value={formik.values.projectSubject}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.projectSubject &&\n          formik.touched?.projectSubject &&\n          formik.errors?.projectSubject\n        }\n        placeholder=\"What is your project about?\"\n        label=\"Subject\"\n      />\n      <Input\n        name=\"projectDate\"\n        type=\"date\"\n        value={formik.values.projectDate}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.projectDate &&\n          formik.touched?.projectDate &&\n          formik.errors?.projectDate\n        }\n        placeholder=\"--/--/--\"\n        label=\"Date\"\n      />\n    </div>\n    <div className={double}>\n      <Input\n        name=\"projectPlatforms\"\n        type=\"text\"\n        value={formik.values.projectPlatforms}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.projectPlatforms &&\n          formik.touched?.projectPlatforms &&\n          formik.errors?.projectPlatforms\n        }\n        placeholder=\"Where can we use it?\"\n        label=\"Platforms\"\n      />\n      <Input\n        name=\"projectTechnologies\"\n        type=\"text\"\n        value={formik.values.projectTechnologies}\n        handleChange={formik.handleChange}\n        error={\n          formik.errors?.projectTechnologies &&\n          formik.touched?.projectTechnologies &&\n          formik.errors?.projectTechnologies\n        }\n        placeholder=\"What did you use for it?\"\n        label=\"Technologies\"\n      />\n    </div>\n    <FormTitle text=\"gallery\" />\n    <FilesInput name=\"projectImages\" label=\"Upload images (4 max)\" />\n  </>\n);\n\nexport default AddProjectForm;\n\nAddProjectForm.propTypes = {\n  formik: PropTypes.shape({\n    values: PropTypes.object,\n    handleChange: PropTypes.func,\n    errors: PropTypes.object,\n    touched: PropTypes.object,\n  }),\n};\n","import * as Yup from 'yup';\n\nexport const initialValues = (project) => ({\n  projectTitle: project?.name ?? '',\n  projectQuote: project?.quote ?? '',\n  projectFirstDescriptionTitle: project?.primaryDescription.title ?? '',\n  projectFirstDescription: project?.primaryDescription.description ?? '',\n  projectSecondDescriptionTitle: project?.secondaryDescription.title ?? '',\n  projectSecondDescription: project?.secondaryDescription.description ?? '',\n  projectSubject: project?.about.subject ?? '',\n  projectDate: project?.about.year ?? '',\n  projectPlatforms: project?.about.platforms ?? '',\n  projectTechnologies: project?.about.technologies ?? '',\n  projectImages: project?.description ?? '',\n});\n\nexport const addProjectFormSchema = Yup.object().shape({\n  projectTitle: Yup.string().required('Required'),\n  projectQuote: Yup.string().required('Required'),\n  projectFirstDescriptionTitle: Yup.string().required('Required'),\n  projectFirstDescription: Yup.string().required('Required'),\n  projectSecondDescriptionTitle: Yup.string().required('Required'),\n  projectSecondDescription: Yup.string().required('Required'),\n  projectDate: Yup.date(),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from 'components/shared/elements/button';\n\nimport { wrapper, controls } from './list-element.module.scss';\n\nconst ListElement = ({ name, editHandle }) => (\n  <div className={wrapper}>\n    <span>{name}</span>\n    <div className={controls}>\n      <Button text=\"edit\" color=\"borderless\" handle={editHandle} />\n      <Button text=\"delete\" color=\"borderless\" handle={() => {}} />\n    </div>\n  </div>\n);\n\nexport default ListElement;\n\nListElement.propTypes = {\n  name: PropTypes.string.isRequired,\n  editHandle: PropTypes.func.isRequired,\n};\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Context } from 'context/userContext';\n\nimport ListElement from 'components/shared/forms/list-element';\n\nconst MyProjectsForm = ({ handle }) => {\n  const navigate = useNavigate();\n  const { projects } = useContext(Context);\n\n  const editHandle = (id) => {\n    handle();\n    navigate(`/projects?id=${id}`);\n  };\n\n  return (\n    <>\n      {projects.map(({ name, id }) => (\n        <ListElement name={name} key={id} editHandle={() => editHandle(id)} />\n      ))}\n    </>\n  );\n};\n\nexport default MyProjectsForm;\n\nMyProjectsForm.propTypes = {\n  handle: PropTypes.func.isRequired,\n};","import React, { useState, useContext, useEffect } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\n\nimport { Context } from 'context/userContext';\n\nimport Layout from 'components/shared/layout';\nimport Modal from 'components/shared/modal';\nimport FormWrapper from 'components/shared/forms/form-wrapper';\nimport ProjectCard from 'components/projects/project-card';\nimport ProjectImage from 'components/projects/project-image';\n\nimport AddProjectForm from 'components/projects/forms/add-project-form';\nimport {\n  initialValues,\n  addProjectFormSchema,\n} from 'components/projects/forms/add-project-form/utils';\nimport MyProjectsForm from 'components/projects/forms/my-projects-form';\n\nimport {\n  contentContainer,\n  projectName,\n  projectBanner,\n} from './projects-list.module.scss';\n\nconst useMousePosition = () => {\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 });\n\n  useEffect(() => {\n    const updateMousePosition = (event) => {\n      setMousePosition({ x: event.clientX, y: event.clientY });\n    };\n\n    window.addEventListener('mousemove', updateMousePosition);\n\n    return () => window.removeEventListener('mousemove', updateMousePosition);\n  }, []);\n\n  return mousePosition;\n};\n\nconst ProjectsList = () => {\n  const navigate = useNavigate();\n  const { x, y } = useMousePosition();\n  const [searchParams] = useSearchParams();\n  const [activeIndex, setActiveIndex] = useState(-1);\n  const [addProjectOpen, setAddProjectOpen] = useState(false);\n  const [myProjectsOpen, setMyProjectsOpen] = useState(false);\n  const { projects } = useContext(Context);\n  const project = projects.find(\n    ({ id }) => id === parseInt(searchParams.get('id'))\n  );\n\n  const handleButton = () => {\n    setMyProjectsOpen(false);\n    setAddProjectOpen(true);\n    navigate(`/projects`);\n  };\n\n  const modal = (isList) =>\n    isList ? (\n      <FormWrapper\n        initialValues={initialValues(project)}\n        schema={addProjectFormSchema}\n        title=\"Add project\"\n        handleClose={() => setAddProjectOpen(false)}\n      >\n        {(formik) => <AddProjectForm formik={formik} />}\n      </FormWrapper>\n    ) : (\n      <Modal\n        title=\"My projects\"\n        handleClose={() => setMyProjectsOpen(false)}\n        handleButton={() => handleButton()}\n      >\n        <MyProjectsForm handle={() => handleButton()} />\n      </Modal>\n    );\n\n  return (\n    <Layout pageTitle=\"Projects\" openModal={() => setMyProjectsOpen(true)}>\n      <section className={contentContainer}>\n        {addProjectOpen ? modal(true) : null}\n        {myProjectsOpen ? modal(false) : null}\n        <div className={projectName}>\n          {projects.map((project, index) => (\n            <ProjectCard\n              project={project}\n              key={project.id}\n              setActiveIndex={setActiveIndex}\n              index={index}\n            />\n          ))}\n        </div>\n        <div className={projectBanner}>\n          {projects.map(({ id, banner }, index) => {\n            const isActive = index === activeIndex;\n            const xPos = isActive ? x : 0;\n            const yPos = isActive ? y : 0;\n            return (\n              <ProjectImage\n                url={banner}\n                active={isActive}\n                key={id}\n                x={xPos}\n                y={yPos}\n              />\n            );\n          })}\n        </div>\n      </section>\n    </Layout>\n  );\n};\n\nexport default ProjectsList;\n","import React, { useContext, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Masonry from 'react-masonry-css';\n\nimport { Context } from 'context/userContext';\n\nimport Layout from 'components/shared/layout/Layout';\nimport FormWrapper from 'components/shared/forms/form-wrapper';\n\nimport AddProjectForm from 'components/projects/forms/add-project-form';\nimport {\n  initialValues,\n  addProjectFormSchema,\n} from 'components/projects/forms/add-project-form/utils';\n\nimport {\n  contentContainer,\n  hero,\n  main,\n  primaryBio,\n  about,\n  secondaryBio,\n  masonry,\n  masonryColumn,\n} from './project.module.scss';\n\nconst Project = () => {\n  const [editProject, setEditProject] = useState(false);\n  const { projectId } = useParams();\n  const { projects } = useContext(Context);\n  const project = projects.find(({ id }) => id === parseInt(projectId));\n\n  const breakpointColumnsObj = {\n    default: 2,\n    800: 1,\n  };\n\n  const modal = () => (\n    <FormWrapper\n      initialValues={initialValues(project)}\n      schema={addProjectFormSchema}\n      title={project.name}\n      handleClose={() => setEditProject(false)}\n    >\n      {(formik) => <AddProjectForm formik={formik} />}\n    </FormWrapper>\n  );\n\n  return (\n    <Layout\n      pageTitle={project.name}\n      noFill\n      openModal={() => setEditProject(true)}\n    >\n      {editProject ? modal(true) : null}\n      <div className={contentContainer}>\n        <div className={hero}>\n          <img src={project.banner} alt=\"project-banner\" />\n          <h1>\n            {project.name}. {project.name}.\n          </h1>\n        </div>\n        <div className={main}>\n          <div className={primaryBio}>\n            <div className={about}>\n              <div>\n                <span>Subject</span>\n                <span>{project.about.subject}</span>\n              </div>\n              <div>\n                <span>Platforms</span>\n                <span>{project.about.platforms}</span>\n              </div>\n              <div>\n                <span>Technologies</span>\n                <span>{project.about.technologies}</span>\n              </div>\n              <div>\n                <span>Year</span>\n                <span>{project.about.year}</span>\n              </div>\n            </div>\n            <div>\n              <h3>{project.primaryDescription.title}</h3>\n              <p>{project.primaryDescription.description}</p>\n              <h4>\"{project.quote}\"</h4>\n            </div>\n          </div>\n          <img\n            src={project.primaryDescription.image}\n            alt=\"description-illustration\"\n          />\n          <div className={secondaryBio}>\n            <img\n              src={project.secondaryDescription.image}\n              alt=\"description-illustration\"\n            />\n            <div>\n              <h3>{project.secondaryDescription.title}</h3>\n              <p>{project.secondaryDescription.description}</p>\n            </div>\n          </div>\n          <Masonry\n            breakpointCols={breakpointColumnsObj}\n            className={masonry}\n            columnClassName={masonryColumn}\n          >\n            {project.gallery.map((img) => (\n              <img src={img} alt=\"project-img\" key={img} />\n            ))}\n          </Masonry>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default Project;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Input from 'components/shared/forms/input';\nimport FilesInput from 'components/shared/forms/files-input';\n\nconst AddExperienceForm = ({ formik }) => (\n  <>\n    <Input\n      name=\"experienceTitle\"\n      type=\"text\"\n      value={formik.values.experienceTitle}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.experienceTitle &&\n        formik.touched?.experienceTitle &&\n        formik.errors?.experienceTitle\n      }\n      placeholder=\"Insert the title of your milestone\"\n      label=\"Title\"\n      isRequired\n    />\n    <Input\n      name=\"experienceDate\"\n      type=\"date\"\n      value={formik.values.experienceDate}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.experienceDate &&\n        formik.touched?.experienceDate &&\n        formik.errors?.experienceDate\n      }\n      placeholder=\"--/--/--\"\n      label=\"Date\"\n      isRequired\n    />\n    <FilesInput name=\"experienceImages\" label=\"Upload image (1 max)\" />\n  </>\n);\n\nexport default AddExperienceForm;\n\nAddExperienceForm.propTypes = {\n  formik: PropTypes.shape({\n    values: PropTypes.object,\n    handleChange: PropTypes.func,\n    errors: PropTypes.object,\n    touched: PropTypes.object,\n  }),\n};\n","import * as Yup from 'yup';\n\nexport const initialValues = (experience) => ({\n  experienceTitle: experience?.name ?? '',\n  experienceDate: experience?.date ?? '',\n  experienceImages: experience?.images ?? '',\n});\n\nexport const addExperienceFormSchema = Yup.object().shape({\n  experienceTitle: Yup.string().required('Required'),\n  experienceDate: Yup.date().required('Required'),\n});\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Context } from 'context/userContext';\n\nimport FormTitle from 'components/shared/forms/form-title';\nimport ListElement from 'components/shared/forms/list-element';\n\nconst MyExperienceForm = ({ handle }) => {\n  const navigate = useNavigate();\n  const { experiences } = useContext(Context);\n\n  let currentYear = '';\n\n  const editHandle = (id) => {\n    handle();\n    navigate(`/experience?id=${id}`);\n  };\n\n  const addTitle = (date, year) => {\n    currentYear = new Date(date).getFullYear();\n    return <FormTitle text={'' + year} isList />;\n  };\n\n  return (\n    <>\n      {experiences.map(({ name, id, date }) => {\n        const year = new Date(date).getFullYear();\n\n        return (\n          <React.Fragment key={id}>\n            {year === currentYear ? null : addTitle(date, year, id)}\n            <ListElement name={name} editHandle={() => editHandle(id)} />\n          </React.Fragment>\n        );\n      })}\n    </>\n  );\n};\n\nexport default MyExperienceForm;\n\nMyExperienceForm.propTypes = {\n  handle: PropTypes.func.isRequired,\n};\n","import React, {\n  useImperativeHandle,\n  useEffect,\n  useRef,\n  forwardRef,\n  useState,\n} from 'react';\nimport Helmet from 'react-helmet';\nimport Glide from '@glidejs/glide';\n\nimport '@glidejs/glide/dist/css/glide.core.css';\n\nimport {\n  timeline,\n  slides,\n  line,\n  month,\n  yearText,\n} from './carousel.module.scss';\n\nexport const Carousel = forwardRef(({ options, children, years }, ref) => {\n  const sliderRef = useRef();\n  const refEl = useRef();\n  const [year, setYear] = useState(years[0]);\n\n  useImperativeHandle(ref, () => sliderRef.current);\n\n  useEffect(() => {\n    const slider = new Glide(sliderRef.current, options);\n\n    slider.on(['mount.after', 'run'], () =>\n      (12 * years.length) / slider.index <= 2 ? setYear(2020) : setYear(2019)\n    );\n\n    slider.mount();\n\n    return () => slider.destroy();\n  }, [years, options]);\n\n  useEffect(() => {\n    const width = parseInt(refEl.current.style.width.replace('px', ''));\n    if (width > 20000) {\n      window.location.reload();\n    }\n  });\n\n  return (\n    <>\n      <Helmet>\n        <style>\n          {`\n          .glide {\n            height: 75vh;\n            position: absolute !important;\n            bottom: 0;\n            z-index: 4;\n          }\n          @media only screen and (max-width: 48rem) {\n            .glide{\n              height: calc(100% - 10.5rem);\n              bottom: initial;\n            }\n          }\n          .glide * {\n            position: unset !important\n          }\n          .glide__slide--active .experiencePop{\n            display: flex;\n          }\n          .glide__slide--active .monthWrapper{\n            position: absolute !important;\n            top: 50%;\n            margin-top: -0.75rem;\n            transform: translateY(-50%);\n          }\n          `}\n        </style>\n      </Helmet>\n      <div className=\"glide\" ref={sliderRef}>\n        <div className={`${timeline} ${'glide__track'}`} data-glide-el=\"track\">\n          <ul ref={refEl} className={`${slides} ${'glide__slides'}`}>\n            {children}\n          </ul>\n          <div className={line}></div>\n        </div>\n      </div>\n      <h2 className={yearText}>{year}</h2>\n    </>\n  );\n});\n\nexport const Slide = forwardRef(({ children }, ref) => (\n  <li className={`${month} ${'glide__slide'}`} ref={ref}>\n    {children}\n  </li>\n));\n","import React, { useState, useContext, useMemo } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { Context } from 'context/userContext';\n\nimport Layout from 'components/shared/layout';\nimport Modal from 'components/shared/modal';\nimport FormWrapper from 'components/shared/forms/form-wrapper';\n\nimport AddExperienceForm from 'components/experience/forms/add-experience-form';\nimport {\n  initialValues,\n  addExperienceFormSchema,\n} from 'components/experience/forms/add-experience-form/utils';\nimport MyExperienceForm from 'components/experience/forms/my-experience-form';\n\nimport * as Carousel from 'components/experience/carousel';\n\nimport {\n  contentContainer,\n  monthWrapper,\n  ball,\n  green,\n  experiencePop,\n  innerPop,\n  experienceInfo,\n} from './experience.module.scss';\n\nconst allMonths = [\n  'Jan',\n  'Fev',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n];\n\nconst Experience = () => {\n  const navigate = useNavigate();\n  const [addExperienceOpen, setAddExperienceOpen] = useState(false);\n  const [myExperienceOpen, setMyExperienceOpen] = useState(false);\n  const [searchParams] = useSearchParams();\n  const { experiences } = useContext(Context);\n  const months = useMemo(() => [], []);\n  const years = useMemo(() => [], []);\n\n  const experience = experiences.find(\n    ({ id }) => id === parseInt(searchParams.get('id'))\n  );\n\n  const handleButton = () => {\n    setMyExperienceOpen(false);\n    setAddExperienceOpen(true);\n    navigate(`/experience`);\n  };\n\n  experiences.map(({ date }) => {\n    const currentDate = new Date(date);\n    const year = currentDate.getFullYear();\n    if (!years?.includes(year)) years.push(year);\n    months.push(year + '_' + currentDate.getMonth());\n    return null;\n  });\n\n  const modal = (isList) =>\n    isList ? (\n      <FormWrapper\n        initialValues={initialValues(experience)}\n        schema={addExperienceFormSchema}\n        title=\"Add experience\"\n        handleClose={() => setAddExperienceOpen(false)}\n      >\n        {(formik) => <AddExperienceForm formik={formik} />}\n      </FormWrapper>\n    ) : (\n      <Modal\n        title=\"My experience\"\n        handleClose={() => setMyExperienceOpen(false)}\n        handleButton={() => handleButton()}\n      >\n        <MyExperienceForm handle={() => handleButton()} />\n      </Modal>\n    );\n\n  return (\n    <Layout pageTitle=\"Experience\" openModal={() => setMyExperienceOpen(true)}>\n      <section className={contentContainer}>\n        {addExperienceOpen ? modal(true) : null}\n        {myExperienceOpen ? modal(false) : null}\n        <Carousel.Component\n          options={{\n            type: 'carousel',\n            perView: 5,\n            focusAt: 'center',\n            startAt: '2',\n            gap: 0,\n          }}\n          years={years}\n        >\n          {years.map((y) => {\n            return allMonths.map((m, i) => {\n              const hasExperience = months.find((x) => x === y + '_' + i);\n              return (\n                <Carousel.Slide key={i}>\n                  <div className={`${monthWrapper} ${'monthWrapper'}`}>\n                    <span id={y + '_' + m}>{m}</span>\n                    <div\n                      className={`${ball} ${'ball'} ${\n                        hasExperience ? green : null\n                      }`}\n                    ></div>\n                  </div>\n                  {hasExperience ? (\n                    <div className={`${experiencePop} ${'experiencePop'}`}>\n                      <div className={innerPop}>\n                        <img src={experiences[0].banner} alt=\"User\" />\n                        <div className={experienceInfo}>\n                          <span>{m}</span>\n                          <h3>{experiences[0].name}</h3>\n                        </div>\n                      </div>\n                    </div>\n                  ) : null}\n                </Carousel.Slide>\n              );\n            });\n          })}\n        </Carousel.Component>\n      </section>\n    </Layout>\n  );\n};\n\nexport default Experience;\n","export default __webpack_public_path__ + \"static/media/MockupLanding.289495be.png\";","import * as Yup from 'yup';\n\nexport const initialValues = {\n  registerEmail: '',\n  registerPassword: '',\n  registerRepeatPassword: '',\n};\n\nexport const registerFormSchema = Yup.object().shape({\n  registerEmail: Yup.string().email('Invalid email').required('Please enter your email'),\n  registerPassword: Yup.string()\n    .required('Please enter your password')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/, // eslint-disable-line\n      'Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character'\n    ),\n  registerRepeatPassword: Yup.string()\n    .oneOf([Yup.ref('registerPassword'), null], \"Passwords don't match\")\n    .required('Repeat Password is required'),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Input from 'components/shared/forms/input';\n\nconst RegisterForm = ({ formik }) => (\n  <>\n    <Input\n      name=\"registerEmail\"\n      type=\"text\"\n      value={formik.values.registerEmail}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.registerEmail &&\n        formik.touched?.registerEmail &&\n        formik.errors?.registerEmail\n      }\n      placeholder=\"Insert your e-mail\"\n      label=\"E-mail\"\n      isRequired\n    />\n    <Input\n      name=\"registerPassword\"\n      type=\"password\"\n      value={formik.values.registerPassword}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.registerPassword &&\n        formik.touched?.registerPassword &&\n        formik.errors?.registerPassword\n      }\n      placeholder=\"Insert your password\"\n      label=\"Password\"\n      isRequired\n    />\n    <Input\n      name=\"registerRepeatPassword\"\n      type=\"password\"\n      value={formik.values.registerRepeatPassword}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.registerRepeatPassword &&\n        formik.touched?.registerRepeatPassword &&\n        formik.errors?.registerRepeatPassword\n      }\n      placeholder=\"Please repeat your password\"\n      label=\"Repeat password\"\n      isRequired\n    />\n  </>\n);\n\nexport default RegisterForm;\n\nRegisterForm.propTypes = {\n  formik: PropTypes.shape({\n    values: PropTypes.object,\n    handleChange: PropTypes.func,\n    errors: PropTypes.object,\n    touched: PropTypes.object,\n  }),\n};\n","import * as Yup from 'yup';\n\nexport const initialValues = {\n  loginEmail: '',\n  loginPassword: '',\n};\n\nexport const loginFormSchema = Yup.object().shape({\n  loginEmail: Yup.string()\n    .email('Invalid email')\n    .required('Please enter your email'),\n  loginPassword: Yup.string()\n    .required('Please enter your password')\n    .matches(\n      /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/, // eslint-disable-line\n      'Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and One Special Case Character'\n    ),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Input from 'components/shared/forms/input';\n\nconst LoginForm = ({ formik }) => (\n  <>\n    <Input\n      name=\"loginEmail\"\n      type=\"text\"\n      value={formik.values.loginEmail}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.loginEmail &&\n        formik.touched?.loginEmail &&\n        formik.errors?.loginEmail\n      }\n      placeholder=\"Insert your e-mail\"\n      label=\"E-mail\"\n      isRequired\n    />\n    <Input\n      name=\"loginPassword\"\n      type=\"password\"\n      value={formik.values.loginPassword}\n      handleChange={formik.handleChange}\n      error={\n        formik.errors?.loginPassword &&\n        formik.touched?.loginPassword &&\n        formik.errors?.loginPassword\n      }\n      placeholder=\"Insert your password\"\n      label=\"Password\"\n      isRequired\n    />\n  </>\n);\n\nexport default LoginForm;\n\nLoginForm.propTypes = {\n  formik: PropTypes.shape({\n    values: PropTypes.object,\n    handleChange: PropTypes.func,\n    errors: PropTypes.object,\n    touched: PropTypes.object,\n  }),\n};\n","import React, { useState } from 'react';\n\nimport MockupLanding from 'assets/images/MockupLanding.png';\n\nimport Button from 'components/shared/elements/button';\nimport FormWrapper from 'components/shared/forms/form-wrapper';\n\nimport {\n  initialValues as registerValues,\n  registerFormSchema,\n} from 'components/landing-page/forms/register-form/utils';\nimport RegisterForm from 'components/landing-page/forms/register-form';\nimport {\n  initialValues as loginValues,\n  loginFormSchema,\n} from 'components/landing-page/forms/login-form/utils';\nimport LoginForm from 'components/landing-page/forms/login-form';\n\nimport {\n  landing,\n  circle,\n  buttons,\n  landingInfo,\n  landingImage,\n} from './landing.module.scss';\n\nconst Landing = () => {\n  const [loginOpen, setLoginOpen] = useState(false);\n  const [registerOpen, setRegisterOpen] = useState(false);\n\n  const handleButton = (isRegister) => {\n    setLoginOpen(!isRegister);\n    setRegisterOpen(isRegister);\n  };\n\n  const footerContent = (isRegister) =>\n    isRegister ? (\n      <>\n        Already have an account?{' '}\n        <Button\n          text=\"Log in\"\n          type=\"button\"\n          handle={() => handleButton(false)}\n        />\n      </>\n    ) : (\n      <>\n        Don’t have and account?{' '}\n        <Button\n          text=\"Sign up\"\n          type=\"button\"\n          handle={() => handleButton(true)}\n        />\n      </>\n    );\n\n  const modal = (isRegister) => (\n    <FormWrapper\n      initialValues={isRegister ? registerValues : loginValues}\n      schema={isRegister ? registerFormSchema : loginFormSchema}\n      title={isRegister ? 'Add experience' : 'Add experience'}\n      handleClose={() =>\n        isRegister ? setRegisterOpen(false) : setLoginOpen(false)\n      }\n      footerContent={footerContent(isRegister)}\n    >\n      {(formik) =>\n        isRegister ? (\n          <RegisterForm formik={formik} />\n        ) : (\n          <LoginForm formik={formik} />\n        )\n      }\n    </FormWrapper>\n  );\n\n  return (\n    <section className={landing}>\n      {loginOpen ? modal(false) : null}\n      {registerOpen ? modal(true) : null}\n      <div className={circle}></div>\n      <div className={landingInfo}>\n        <h1>\n          Editable\n          <br />\n          Portfolio\n        </h1>\n        <h3>\n          The platform that makes it easy to create your personal portfolio site\n          in just a few minutes. Create yours <span>now</span>!\n        </h3>\n        <div className={buttons}>\n          <Button\n            text=\"Register\"\n            color=\"green\"\n            handle={() => handleButton(true)}\n          />\n          <Button\n            text=\"Login\"\n            color=\"green\"\n            handle={() => handleButton(false)}\n          />\n        </div>\n      </div>\n      <img src={MockupLanding} alt=\"Mockup\" className={landingImage} />\n    </section>\n  );\n};\n\nexport default Landing;\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\n\nimport Home from './pages/home';\nimport Projects from './pages/projects/projects-list';\nimport Project from './pages/projects/project';\nimport Experience from './pages/experience';\nimport Landing from './pages/landing';\n\nimport UserContext from 'context/userContext';\n\nimport './styles/global.scss';\n\nfunction App() {\n  return (\n    <UserContext>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>Editable Portfolio</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      </Helmet>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<Landing />} />\n          <Route path=\"/home\" element={<Home />} />\n          <Route path=\"/projects\" element={<Projects />} />\n          <Route path=\"/projects/:projectId\" element={<Project />} />\n          <Route path=\"/experience\" element={<Experience />} />\n        </Routes>\n      </BrowserRouter>\n    </UserContext>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"experience_contentContainer__38qMT\",\"monthWrapper\":\"experience_monthWrapper__2XUTo\",\"ball\":\"experience_ball__HQ5-h\",\"green\":\"experience_green__3m5UK\",\"experiencePop\":\"experience_experiencePop__3kLQG\",\"innerPop\":\"experience_innerPop__253fk\",\"experienceInfo\":\"experience_experienceInfo__2kE5A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__143Iq\",\"icon\":\"button_icon__1PWN2\",\"borderless\":\"button_borderless__2i_W_\",\"green\":\"button_green__3og7F\",\"white\":\"button_white__3XJod\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"projects-list_contentContainer__3BvEX\",\"projectName\":\"projects-list_projectName__3s3pB\",\"projectBanner\":\"projects-list_projectBanner__15QCq\",\"isActive\":\"projects-list_isActive__pMeUW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeline\":\"carousel_timeline__-U8pK\",\"slides\":\"carousel_slides__1ENih\",\"line\":\"carousel_line__QfFVx\",\"month\":\"carousel_month__3MLOM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"landing\":\"landing_landing__fdgkz\",\"circle\":\"landing_circle__eYX2k\",\"landingInfo\":\"landing_landingInfo__90BfO\",\"landingImage\":\"landing_landingImage__2bQsu\",\"buttons\":\"landing_buttons__3KNd3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__pAAvU\",\"pageInfo\":\"header_pageInfo__17fDH\",\"headerTransparent\":\"header_headerTransparent__E4xBS\",\"hideTitle\":\"header_hideTitle__3HWNX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contentContainer\":\"home_contentContainer__2yUYu\",\"about\":\"home_about__1qtvq\",\"footer\":\"home_footer__2OuOp\",\"imageGroup\":\"home_imageGroup__1qnJC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"input_input__2jmj8\",\"red\":\"input_red__3xfOO\",\"errorMessage\":\"input_errorMessage__rkMhB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"textarea_textarea__1Nv1H\",\"red\":\"textarea_red__324FM\",\"errorMessage\":\"textarea_errorMessage__nNFwp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"list-element_wrapper__3letE\",\"controls\":\"list-element_controls__pyuI9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"navigation_nav__1Tr3w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"info-element_wrapper__R1pZg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"form-title_title__3-kyq\"};"],"sourceRoot":""}